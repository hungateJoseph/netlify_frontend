{"ast":null,"code":"import _slicedToArray from\"/Users/josephhungate/my-app-copy/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Bar,Line,Pie,Scatter}from'react-chartjs-2';// import Chart from 'chart.js'\nimport Select from'react-select';import LineGraph from'react-line-graph';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function ClickCountButton2(data1){console.log(\"data13 default val state is \",data1);var _useState=useState(data1),_useState2=_slicedToArray(_useState,2),data13=_useState2[0],setData1=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),inputparty=_useState4[0],setParty=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),inputstate=_useState6[0],setState=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),inputhouse=_useState8[0],setHouse=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),graphtype=_useState10[0],setGraph=_useState10[1];var graphData=data1;var selectedParty=\"Both\";var selectedState=\"\";var selectedHouse=\"Both\";var x_axis_label=\"\";var labeledstate=\"\";console.log(\"data12 default val state is \",data13);if(inputparty!=\"\"){console.log(\"default party has not been picked\");selectedParty=inputparty;}if(inputstate!=\"\"){selectedState=inputstate;}if(inputhouse!=\"\"){selectedHouse=inputhouse;}if(Object.keys(data13).length>0){console.log(\"hit if statement\");graphData=data13;}console.log(\"selectedparty var \",selectedParty);var partylist=[{value:\"Democrat\",label:\"Democrats\"},{value:\"Republican\",label:\"Republicans\"},{value:\"Both\",label:\"Both\"}];var houselist=[{value:\"House\",label:\"House\"},{value:\"Senate\",label:\"Senate\"},{value:\"Both\",label:\"Both\"}];var statelist=[{value:\"AL\",label:\"AL\"},{value:\"AK\",label:\"AK\"},{value:\"AZ\",label:\"AZ\"},{value:\"AR\",label:\"AR\"},{value:\"CA\",label:\"CA\"},{value:\"CO\",label:\"CO\"},{value:\"CT\",label:\"CT\"},{value:\"DE\",label:\"DE\"},{value:\"FL\",label:\"FL\"},{value:\"GA\",label:\"GA\"},{value:\"HI\",label:\"HI\"},{value:\"ID\",label:\"ID\"},{value:\"IL\",label:\"IL\"},{value:\"IN\",label:\"IN\"},{value:\"IA\",label:\"IA\"},{value:\"KS\",label:\"KS\"},{value:\"KY\",label:\"KY\"},{value:\"LA\",label:\"LA\"},{value:\"ME\",label:\"ME\"},{value:\"MD\",label:\"MD\"},{value:\"MA\",label:\"MA\"},{value:\"MI\",label:\"MI\"},{value:\"MN\",label:\"MN\"},{value:\"MS\",label:\"MS\"},{value:\"MO\",label:\"MO\"},{value:\"MT\",label:\"MT\"},{value:\"NE\",label:\"NE\"},{value:\"NV\",label:\"NV\"},{value:\"NH\",label:\"NH\"},{value:\"NJ\",label:\"NJ\"},{value:\"NM\",label:\"NM\"},{value:\"NY\",label:\"NY\"},{value:\"NC\",label:\"NC\"},{value:\"ND\",label:\"ND\"},{value:\"OH\",label:\"OH\"},{value:\"OK\",label:\"OK\"},{value:\"OR\",label:\"OR\"},{value:\"PA\",label:\"PA\"},{value:\"RI\",label:\"RI\"},{value:\"SC\",label:\"SC\"},{value:\"SD\",label:\"SD\"},{value:\"TN\",label:\"TN\"},{value:\"TX\",label:\"TX\"},{value:\"UT\",label:\"UT\"},{value:\"VT\",label:\"VT\"},{value:\"VA\",label:\"VA\"},{value:\"WA\",label:\"WA\"},{value:\"WV\",label:\"WV\"},{value:\"WI\",label:\"WI\"},{value:\"WY\",label:\"WY\"}];var partyHandler=function partyHandler(e){setParty(e.value);selectedParty=e.value;console.log(\"buton clicked \",e.value);};var stateHandler=function stateHandler(e){setState(e.value);selectedState=e.value;console.log(\"buton clicked \",e.value);};var houseHandler=function houseHandler(e){setHouse(e.value);selectedHouse=e.value;console.log(\"buton clicked \",e.value);};var graphHandler=function graphHandler(e){setGraph(e);// selectedHouse = e.value\nconsole.log(\"buton clicked \",e);RunPythonMain(data1);};var datanull=\"\";console.log(\"notnot null init valu\",graphData.state);if(typeof graphData.state!=='undefined'){console.log(\"notnot null\");datanull=graphData.state;}if(graphtype==true){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bar-chart\",children:/*#__PURE__*/_jsx(Bar,{data:{labels:data13.labels,datasets:[{label:\"Tweet Sentiment Score Sorted by Category\",data:data13.averages,backgroundColor:\"#007399\",barThickness:80,borderColor:\"#cc66ff\"}]},height:400,width:600})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"load-button \".concat('button-active'),onClick:function onClick(){return RunPythonMain([selectedParty,selectedState,selectedHouse]);},children:/*#__PURE__*/_jsx(\"p\",{style:{paddingTop:'18px'},children:\"Load\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"select-button\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"Party\",options:partylist,onChange:partyHandler})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"select-state-button\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"State\",options:statelist,onChange:stateHandler})})}),/*#__PURE__*/_jsx(\"div\",{className:\"select-house-button\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"Chamber\",options:houselist,onChange:houseHandler})}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",class:\"inline\",id:\"one\",value:\"Bar Graph\",onClick:function onClick(){return graphHandler(true);}}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",class:\"inline\",id:\"one\",value:\"Line Graph\",onClick:function onClick(){return graphHandler(false);}})]});}if(graphtype==false){// const line_data = [1, 2]\n// var final_array = []\n// console.log(\"raw line graph data is \", data13)\n// var dict = []\n// var counter = 0\n// for (var k in data13) {\n//     console.log(\"stripped individual #followers \", k)\n//     console.log(\"stripped individual sentiment \", data13[k])\n//     dict.push({\n//         x: parseInt(k),\n//         y: data13[k]\n//     })\n//     final_array.push(dict[counter])\n//     counter += 1\n// }\n// console.log(\"dict is \", dict)\n// console.log(\"dict stripped is \", dict[0])\n// console.log(\"final array \", final_array)\nvar dict=[];var last_sentiment=0.0;for(var i=0;i<100;i++){// return Math.random() * (max - min) + min\nvar new_val=0.0;var test_val=Math.random()*(0.2-0.1)+0.1;if(last_sentiment+test_val>0.99){new_val=last_sentiment-test_val;}else{new_val=last_sentiment+test_val;}dict.push({x:Math.random()*(1000*(i+1)-1000*i)+1000*i,y:new_val});last_sentiment=new_val;}console.log(\"dict is \",dict);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"bar-chart\",children:/*#__PURE__*/_jsx(Scatter,{data:{datasets:[{label:'Tweet Sentiment Score Graphed by Number of Followers',data:dict,borderColor:\"#007399\",backgroundColor:\"#007399\",pointRadius:0,showLine:true}]},height:400,width:600})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"load-button \".concat('button-active'),onClick:function onClick(){return RunPythonMain([selectedParty,selectedState,selectedHouse]);},children:/*#__PURE__*/_jsx(\"p\",{style:{paddingTop:'18px'},children:\"Load\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"select-button\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"Party\",options:partylist,onChange:partyHandler})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:\"select-state-button\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"State\",options:statelist,onChange:stateHandler})})}),/*#__PURE__*/_jsx(\"div\",{className:\"select-house-button\",children:/*#__PURE__*/_jsx(Select,{placeholder:\"Chamber\",options:houselist,onChange:houseHandler})}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",class:\"inline\",id:\"one\",value:\"Bar Graph\",onClick:function onClick(){return graphHandler(true);}}),/*#__PURE__*/_jsx(\"input\",{type:\"button\",class:\"inline\",id:\"one\",value:\"Line Graph\",onClick:function onClick(){return graphHandler(false);}})]});}function RunPythonMain(e){console.log(\"ran second fetch\",e[0]);// labeledstate = `: ${inputstate}`\nif(graphtype==true){if(e[0]==\"Republican\"){var rnd=Array.from({length:40},function(){return Math.random()*1;});console.log(\"rand\",rnd);setData1({\"labels\":[\"Republicans\"],\"averages\":rnd,\"state\":[\"\"]});}else if(e[0]==\"Democrat\"){var rnd1=Array.from({length:40},function(){return Math.random()*1;});console.log(\"rand\",rnd);setData1({\"labels\":[\"Democrats\"],\"averages\":rnd1,\"state\":[\"\"]});}else{var rnd2=Array.from({length:40},function(){return Math.random()*1;});setData1({\"labels\":[\"Democrats\",\"Republicans\"],\"averages\":rnd2,\"state\":[\"\"]});}//     fetch(`/select_data${JSON.stringify(e)}`).then(\n//     res => res.json()\n//     ).then(\n//     data => {\n//         setData1(data)\n//         console.log(\"default fetch run\")\n//         console.log(data)\n//     }\n//  )\n}if(graphtype==false){// fetch(`/line_graph_data${JSON.stringify(e)}`).then(\n//     res => res.json()\n// ).then(\n//     data => {\n//         setData1(data)\n//         console.log(\"default line graph data\", data)\n//         console.log(data)\n//     }\n// )\n// setData1({\"20,000\": 1},{\"10,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},)\nsetData1({\"labels\":[\"Democrats\",\"Republicans\"],\"averages\":rnd2,\"state\":[\"\"]});}}}export default ClickCountButton2;","map":{"version":3,"sources":["/Users/josephhungate/my-app-copy/src/DrawGraph.js"],"names":["React","useState","Bar","Line","Pie","Scatter","Select","LineGraph","ClickCountButton2","data1","console","log","data13","setData1","inputparty","setParty","inputstate","setState","inputhouse","setHouse","graphtype","setGraph","graphData","selectedParty","selectedState","selectedHouse","x_axis_label","labeledstate","Object","keys","length","partylist","value","label","houselist","statelist","partyHandler","e","stateHandler","houseHandler","graphHandler","RunPythonMain","datanull","state","labels","datasets","data","averages","backgroundColor","barThickness","borderColor","paddingTop","dict","last_sentiment","i","new_val","test_val","Math","random","push","x","y","pointRadius","showLine","rnd","Array","from","rnd1","rnd2"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Bar, Line, Pie, Scatter} from 'react-chartjs-2'\n// import Chart from 'chart.js'\nimport Select from 'react-select'\nimport LineGraph from 'react-line-graph'\n\n\n\nfunction ClickCountButton2(data1) {\n    console.log(\"data13 default val state is \", data1)\n    const [data13, setData1] = useState(data1)\n    const [inputparty, setParty] = useState(\"\");\n    const [inputstate, setState] = useState(\"\");\n    const [inputhouse, setHouse] = useState(\"\");\n\n    const [graphtype, setGraph] = useState(true);\n\n    var graphData = data1\n    var selectedParty = \"Both\"\n    var selectedState = \"\"\n    var selectedHouse = \"Both\"\n    var x_axis_label = \"\"\n    var labeledstate = \"\" \n    console.log(\"data12 default val state is \", data13)\n\n    if (inputparty != \"\") {\n        console.log(\"default party has not been picked\");\n        selectedParty = inputparty\n    }\n    if (inputstate != \"\" ) {\n        selectedState = inputstate\n    }\n\n    if (inputhouse != \"\" ) {\n        selectedHouse = inputhouse\n    }\n\n    if (Object.keys(data13).length > 0) {\n        console.log(\"hit if statement\")\n        graphData = data13\n    }\n\n    console.log(\"selectedparty var \", selectedParty)\n    var partylist = [\n        {\n            value:\"Democrat\",\n            label:\"Democrats\"\n        },\n        {\n            value:\"Republican\",\n            label:\"Republicans\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n]\n\n    var houselist = [\n        {\n            value:\"House\",\n            label:\"House\"\n        },\n        {\n            value:\"Senate\",\n            label:\"Senate\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n    ]\n\n    var statelist = [\n        {value:\"AL\", label:\"AL\"}, {value:\"AK\", label:\"AK\"}, {value:\"AZ\", label:\"AZ\"}, {value:\"AR\", label:\"AR\"}, {value:\"CA\", label:\"CA\"}, {value:\"CO\", label:\"CO\"}\n        , {value:\"CT\", label:\"CT\"}, {value:\"DE\", label:\"DE\"}, {value:\"FL\", label:\"FL\"}, {value:\"GA\", label:\"GA\"}, {value:\"HI\", label:\"HI\"}, {value:\"ID\", label:\"ID\"}\n        , {value:\"IL\", label:\"IL\"}, {value:\"IN\", label:\"IN\"}, {value:\"IA\", label:\"IA\"}, {value:\"KS\", label:\"KS\"}, {value:\"KY\", label:\"KY\"}, {value:\"LA\", label:\"LA\"}\n        , {value:\"ME\", label:\"ME\"}, {value:\"MD\", label:\"MD\"}, {value:\"MA\", label:\"MA\"}, {value:\"MI\", label:\"MI\"}, {value:\"MN\", label:\"MN\"}, {value:\"MS\", label:\"MS\"}\n        , {value:\"MO\", label:\"MO\"}, {value:\"MT\", label:\"MT\"}, {value:\"NE\", label:\"NE\"}, {value:\"NV\", label:\"NV\"}, {value:\"NH\", label:\"NH\"}, {value:\"NJ\", label:\"NJ\"}\n        , {value:\"NM\", label:\"NM\"}, {value:\"NY\", label:\"NY\"}, {value:\"NC\", label:\"NC\"}, {value:\"ND\", label:\"ND\"}, {value:\"OH\", label:\"OH\"}, {value:\"OK\", label:\"OK\"}\n        , {value:\"OR\", label:\"OR\"}, {value:\"PA\", label:\"PA\"}, {value:\"RI\", label:\"RI\"}, {value:\"SC\", label:\"SC\"}, {value:\"SD\", label:\"SD\"}, {value:\"TN\", label:\"TN\"}\n        , {value:\"TX\", label:\"TX\"}, {value:\"UT\", label:\"UT\"}, {value:\"VT\", label:\"VT\"}, {value:\"VA\", label:\"VA\"}, {value:\"WA\", label:\"WA\"}, {value:\"WV\", label:\"WV\"}\n        , {value:\"WI\", label:\"WI\"}, {value:\"WY\", label:\"WY\"}\n    ]\n\n    \n    const partyHandler = e => {\n        setParty(e.value);\n        selectedParty = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const stateHandler = e => {\n        setState(e.value);\n        selectedState = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const houseHandler = e => {\n        setHouse(e.value);\n        selectedHouse = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const graphHandler = e => {\n        setGraph(e);\n        // selectedHouse = e.value\n        console.log(\"buton clicked \", e);\n        RunPythonMain(data1)\n    }\n\n    var datanull = \"\"\n    console.log(\"notnot null init valu\", graphData.state)\n    if (typeof graphData.state !== 'undefined') {\n        console.log(\"notnot null\")\n        datanull = graphData.state\n    }\n\n    if (graphtype == true) {\n        return (\n            <>\n            <div className='bar-chart'>\n                 <Bar \n                data = {{\n                    labels:data13.labels,\n                    datasets: [{\n                        label: `Tweet Sentiment Score Sorted by Category`,\n                        data: data13.averages,\n                        backgroundColor: \"#007399\",\n                        barThickness: 80,\n                        borderColor: \"#cc66ff\"\n                          \n                    }\n                    \n                    \n                    ],\n        \n                }\n            \n            \n            }\n                \n                \n                height={400}\n                width={600}\n                />\n            \n            {/* <div className={`button ${day !== '' && 'button-active'}`}><p style={{ paddingTop:'18px' }}>View data</p></div> */}\n\n            </div>\n            <div>\n                <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n\n                {/* <div className={`bar-chart`}> */}\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n                {/* </div> */}\n\n    \n            </>\n        );\n    }\n    if (graphtype == false) {\n        // const line_data = [1, 2]\n        // var final_array = []\n        // console.log(\"raw line graph data is \", data13)\n        // var dict = []\n        // var counter = 0\n        // for (var k in data13) {\n        //     console.log(\"stripped individual #followers \", k)\n        //     console.log(\"stripped individual sentiment \", data13[k])\n        //     dict.push({\n        //         x: parseInt(k),\n        //         y: data13[k]\n        //     })\n        //     final_array.push(dict[counter])\n        //     counter += 1\n        // }\n        // console.log(\"dict is \", dict)\n        // console.log(\"dict stripped is \", dict[0])\n        // console.log(\"final array \", final_array)\n        var dict = []\n        var last_sentiment = 0.0\n                for (let i = 0; i < 100; i ++) {\n                    // return Math.random() * (max - min) + min\n                    var new_val = 0.0\n                    let test_val = Math.random() * (0.2 - 0.1) + 0.1\n                    if (last_sentiment + test_val > 0.99) {\n                        new_val = last_sentiment - test_val\n                    }\n                    else {\n                        new_val = last_sentiment + test_val\n                    }\n                    dict.push({\n                        x: Math.random() * (1000*(i+1) - 1000*i) + 1000*i,\n                        y: new_val\n                    })\n                    last_sentiment = new_val \n                }\n                console.log(\"dict is \", dict)\n        return (\n            \n            <>\n            <div className='bar-chart'>\n                <Scatter\n                data = {\n                    {\n                    \n                    datasets: [{\n                        label: 'Tweet Sentiment Score Graphed by Number of Followers',\n                        data: dict,\n                        borderColor: \"#007399\",\n                        backgroundColor: \"#007399\",\n                        pointRadius: 0,\n                        showLine: true\n                    }]\n                }\n                \n            }\n                \n                height={400}\n                width={600}\n                />\n            \n            </div>\n            <div>\n            <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n            \n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n    \n            </>\n        );\n    }\n    \n    function RunPythonMain(e) {\n            console.log(\"ran second fetch\", e[0])\n            // labeledstate = `: ${inputstate}`\n            if (graphtype == true) {\n                if (e[0] == \"Republican\") {\n                    var rnd = Array.from({length: 40}, () => (Math.random() * 1));\n                    console.log(\"rand\", rnd)\n                    setData1({\"labels\" : [\"Republicans\"], \"averages\" : rnd, \"state\" : [\"\"]})\n                }\n                else if (e[0] == \"Democrat\") {\n                    var rnd1 = Array.from({length: 40}, () => (Math.random() * 1));\n                    console.log(\"rand\", rnd)\n                    setData1({\"labels\" : [\"Democrats\"], \"averages\" : rnd1, \"state\" : [\"\"]})\n                }\n                else {\n                    var rnd2 = Array.from({length: 40}, () => (Math.random() * 1));\n                    setData1({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : rnd2, \"state\" : [\"\"]})\n                }\n            //     fetch(`/select_data${JSON.stringify(e)}`).then(\n            //     res => res.json()\n            //     ).then(\n            //     data => {\n            //         setData1(data)\n            //         console.log(\"default fetch run\")\n            //         console.log(data)\n\n            //     }\n            //  )\n            \n            }\n            if (graphtype == false) {\n            // fetch(`/line_graph_data${JSON.stringify(e)}`).then(\n            //     res => res.json()\n            // ).then(\n            //     data => {\n            //         setData1(data)\n            //         console.log(\"default line graph data\", data)\n            //         console.log(data)\n\n            //     }\n            // )\n            // setData1({\"20,000\": 1},{\"10,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},)\n                \n                \n                setData1({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : rnd2, \"state\" : [\"\"]})\n            }\n        }\n\n}\n\n\n\nexport default ClickCountButton2;"]},"metadata":{},"sourceType":"module"}