{"ast":null,"code":"var _jsxFileName = \"/Users/josephhungate/my-app/src/DrawGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport Select from 'react-select'; // import { Link } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClickCountButton2(data1) {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [data12, setData] = useState({});\n  const [inputparty, setParty] = useState(\"\");\n  const [inputstate, setState] = useState(\"\");\n  var graphData = data1;\n  var selectedParty = \"Both\";\n  var selectedState = \"CA\";\n  console.log(\"input state is \", inputstate);\n  var labeledstate = \"\";\n\n  if (inputparty != \"\") {\n    console.log(\"default party has not been picked\");\n    selectedParty = inputparty;\n  }\n\n  if (inputstate != \"\") {\n    selectedState = inputstate;\n    labeledstate = `: ${inputstate}`;\n  }\n\n  if (Object.keys(data12).length > 0) {\n    console.log(\"hit if statement\");\n    graphData = data12;\n  }\n\n  console.log(\"selectedparty var \", selectedParty);\n  var partylist = [{\n    value: \"Democrat\",\n    label: \"Democrat\"\n  }, {\n    value: \"Republican\",\n    label: \"Republican\"\n  }, {\n    value: \"Both\",\n    label: \"Both\"\n  }];\n  var statelist = [{\n    value: \"AL\",\n    label: \"AL\"\n  }, {\n    value: \"AK\",\n    label: \"AK\"\n  }, {\n    value: \"AZ\",\n    label: \"AZ\"\n  }, {\n    value: \"AR\",\n    label: \"AR\"\n  }, {\n    value: \"CA\",\n    label: \"CA\"\n  }, {\n    value: \"CO\",\n    label: \"CO\"\n  }, {\n    value: \"CT\",\n    label: \"CT\"\n  }, {\n    value: \"DE\",\n    label: \"DE\"\n  }, {\n    value: \"FL\",\n    label: \"FL\"\n  }, {\n    value: \"GA\",\n    label: \"GA\"\n  }, {\n    value: \"HI\",\n    label: \"HI\"\n  }, {\n    value: \"ID\",\n    label: \"ID\"\n  }, {\n    value: \"IL\",\n    label: \"IL\"\n  }, {\n    value: \"IN\",\n    label: \"IN\"\n  }, {\n    value: \"IA\",\n    label: \"IA\"\n  }, {\n    value: \"KS\",\n    label: \"KS\"\n  }, {\n    value: \"KY\",\n    label: \"KY\"\n  }, {\n    value: \"LA\",\n    label: \"LA\"\n  }, {\n    value: \"ME\",\n    label: \"ME\"\n  }, {\n    value: \"MD\",\n    label: \"MD\"\n  }, {\n    value: \"MA\",\n    label: \"MA\"\n  }, {\n    value: \"MI\",\n    label: \"MI\"\n  }, {\n    value: \"MN\",\n    label: \"MN\"\n  }, {\n    value: \"MS\",\n    label: \"MS\"\n  }, {\n    value: \"MO\",\n    label: \"MO\"\n  }, {\n    value: \"MT\",\n    label: \"MT\"\n  }, {\n    value: \"NE\",\n    label: \"NE\"\n  }, {\n    value: \"NV\",\n    label: \"NV\"\n  }, {\n    value: \"NH\",\n    label: \"NH\"\n  }, {\n    value: \"NJ\",\n    label: \"NJ\"\n  }, {\n    value: \"NM\",\n    label: \"NM\"\n  }, {\n    value: \"NY\",\n    label: \"NY\"\n  }, {\n    value: \"NC\",\n    label: \"NC\"\n  }, {\n    value: \"ND\",\n    label: \"ND\"\n  }, {\n    value: \"OH\",\n    label: \"OH\"\n  }, {\n    value: \"OK\",\n    label: \"OK\"\n  }, {\n    value: \"OR\",\n    label: \"OR\"\n  }, {\n    value: \"PA\",\n    label: \"PA\"\n  }, {\n    value: \"RI\",\n    label: \"RI\"\n  }, {\n    value: \"SC\",\n    label: \"SC\"\n  }, {\n    value: \"SD\",\n    label: \"SD\"\n  }, {\n    value: \"TN\",\n    label: \"TN\"\n  }, {\n    value: \"TX\",\n    label: \"TX\"\n  }, {\n    value: \"UT\",\n    label: \"UT\"\n  }, {\n    value: \"VT\",\n    label: \"VT\"\n  }, {\n    value: \"VA\",\n    label: \"VA\"\n  }, {\n    value: \"WA\",\n    label: \"WA\"\n  }, {\n    value: \"WV\",\n    label: \"WV\"\n  }, {\n    value: \"WI\",\n    label: \"WI\"\n  }, {\n    value: \"WY\",\n    label: \"WY\"\n  }];\n\n  const partyHandler = e => {\n    setParty(e.value);\n    selectedParty = e.value;\n    console.log(\"buton clicked \", e.value);\n  };\n\n  const stateHandler = e => {\n    setState(e.value);\n    selectedState = e.value;\n    console.log(\"buton clicked \", e.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-chart\",\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: {\n          labels: graphData.labels,\n          datasets: [{\n            label: `Tweet Sentiment Score Sorted by Category`,\n            data: graphData.averages,\n            backgroundColor: ['rgba(255, 99, 132, 0.2)']\n          }]\n        },\n        height: 400,\n        width: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `load-button`,\n        onClick: () => RunPythonMain(selectedParty),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            paddingTop: '18px'\n          },\n          children: \"Load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select-button`,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Party\",\n          options: partylist,\n          onChange: partyHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `select-state-button`,\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        placeholder: \"State\",\n        options: statelist,\n        onChange: stateHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n\n  function RunPythonMain(e) {\n    console.log(\"ran second fetch\", e);\n    fetch(`/select_party${e}`).then(res => res.json()).then(data => {\n      setData(data);\n      console.log(\"default fetch run\");\n      console.log(data);\n    });\n  }\n}\n\n_s(ClickCountButton2, \"zMr7HSH4AD/5jqVczW83NDnApio=\");\n\n_c = ClickCountButton2;\nexport default ClickCountButton2; // var count = 1;\n// var d1 = [1, 2, 3];\n// var reference;\n// export default function DrawGraph(data1) {\n//     console.log(data1.members);\n//     const [data, setData] = useState('null')\n//     function handleMonth(e) {\n//         setData(e);\n//     }\n//     return (\n//         <div className='bar-chart'>\n//             <Bar\n//             data = {{\n//                 labels:data1.members,\n//                 datasets: [{\n//                     label: '# of votesk',\n//                     data: d1,\n//                 }\n//                 ]\n//             }}\n//             height={400}\n//             width={600}\n//             // ref = {(reference) => this.reference = reference}\n//             />\n//         <div className={`button`}>\n//             <button value=\"/default_data_set\" onClick={TestNew}>Big Button</button>\n//         </div>\n//         </div>\n//         )\n// }\n// async function TestNew(e) {\n//     // useState(false)\n//     var test = {}\n//         test = await fetch(e.target.value).then(\n//             res => res.json()\n//         );\n//         // .then(\n//         //     data => {\n//         //         test = data\n//         //         console.log(data)\n//         //     }\n//         // )\n//         console.log(test)\n//         DrawGraph(test)\n// }\n\n{\n  /* <p style={{ paddingTop:'18px' }}>View data</p> */\n} // const BarChart = () => {\n//     return (\n//     <div className='bar-chart'>\n//         <Bar\n//         data = {{\n//             labels:['red', 'blue'],\n//             datasets: [{\n//                 label: '# of votesk',\n//                 data: [1, 2, 3, 4],\n//             }\n//             ]\n//         }}\n//         height={400}\n//         width={600}\n//         />\n//     </div>\n//     )\n// }\n// export default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickCountButton2\");","map":{"version":3,"sources":["/Users/josephhungate/my-app/src/DrawGraph.js"],"names":["React","useState","Bar","Select","ClickCountButton2","data1","count","setCount","data12","setData","inputparty","setParty","inputstate","setState","graphData","selectedParty","selectedState","console","log","labeledstate","Object","keys","length","partylist","value","label","statelist","partyHandler","e","stateHandler","labels","datasets","data","averages","backgroundColor","RunPythonMain","paddingTop","fetch","then","res","json"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Bar} from 'react-chartjs-2'\nimport Select from 'react-select'\n// import { Link } from \"react-router-dom\";\n\n\n\n\nfunction ClickCountButton2(data1) {\n    const [count, setCount] = useState(0);\n    const [data12, setData] = useState({})\n    const [inputparty, setParty] = useState(\"\");\n    const [inputstate, setState] = useState(\"\");\n    var graphData = data1\n    var selectedParty = \"Both\"\n    var selectedState = \"CA\"\n    console.log(\"input state is \", inputstate)\n    var labeledstate = \"\" \n\n    if (inputparty != \"\") {\n        console.log(\"default party has not been picked\");\n        selectedParty = inputparty\n    }\n    if (inputstate != \"\" ) {\n        selectedState = inputstate\n        labeledstate = `: ${inputstate}`\n    }\n\n    if (Object.keys(data12).length > 0) {\n        console.log(\"hit if statement\")\n        graphData = data12\n    }\n\n    console.log(\"selectedparty var \", selectedParty)\n    var partylist = [\n        {\n            value:\"Democrat\",\n            label:\"Democrat\"\n        },\n        {\n            value:\"Republican\",\n            label:\"Republican\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n]\n\n    var statelist = [\n        {value:\"AL\", label:\"AL\"}, {value:\"AK\", label:\"AK\"}, {value:\"AZ\", label:\"AZ\"}, {value:\"AR\", label:\"AR\"}, {value:\"CA\", label:\"CA\"}, {value:\"CO\", label:\"CO\"}\n        , {value:\"CT\", label:\"CT\"}, {value:\"DE\", label:\"DE\"}, {value:\"FL\", label:\"FL\"}, {value:\"GA\", label:\"GA\"}, {value:\"HI\", label:\"HI\"}, {value:\"ID\", label:\"ID\"}\n        , {value:\"IL\", label:\"IL\"}, {value:\"IN\", label:\"IN\"}, {value:\"IA\", label:\"IA\"}, {value:\"KS\", label:\"KS\"}, {value:\"KY\", label:\"KY\"}, {value:\"LA\", label:\"LA\"}\n        , {value:\"ME\", label:\"ME\"}, {value:\"MD\", label:\"MD\"}, {value:\"MA\", label:\"MA\"}, {value:\"MI\", label:\"MI\"}, {value:\"MN\", label:\"MN\"}, {value:\"MS\", label:\"MS\"}\n        , {value:\"MO\", label:\"MO\"}, {value:\"MT\", label:\"MT\"}, {value:\"NE\", label:\"NE\"}, {value:\"NV\", label:\"NV\"}, {value:\"NH\", label:\"NH\"}, {value:\"NJ\", label:\"NJ\"}\n        , {value:\"NM\", label:\"NM\"}, {value:\"NY\", label:\"NY\"}, {value:\"NC\", label:\"NC\"}, {value:\"ND\", label:\"ND\"}, {value:\"OH\", label:\"OH\"}, {value:\"OK\", label:\"OK\"}\n        , {value:\"OR\", label:\"OR\"}, {value:\"PA\", label:\"PA\"}, {value:\"RI\", label:\"RI\"}, {value:\"SC\", label:\"SC\"}, {value:\"SD\", label:\"SD\"}, {value:\"TN\", label:\"TN\"}\n        , {value:\"TX\", label:\"TX\"}, {value:\"UT\", label:\"UT\"}, {value:\"VT\", label:\"VT\"}, {value:\"VA\", label:\"VA\"}, {value:\"WA\", label:\"WA\"}, {value:\"WV\", label:\"WV\"}\n        , {value:\"WI\", label:\"WI\"}, {value:\"WY\", label:\"WY\"}\n    ]\n\n    \n    const partyHandler = e => {\n        setParty(e.value);\n        selectedParty = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const stateHandler = e => {\n        setState(e.value);\n        selectedState = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    \n\n    return (\n        <>\n        <div className='bar-chart'>\n             <Bar\n            data = {{\n                labels:graphData.labels,\n                datasets: [{\n                    label: `Tweet Sentiment Score Sorted by Category`,\n                    data: graphData.averages,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)'\n                      ],\n                },\n                \n                ]\n            }}\n        \n            height={400}\n            width={600}\n            />\n        \n        \n        </div>\n        <div>\n            <div className={`load-button`} onClick={() => RunPythonMain(selectedParty)}>\n        <p style={{ paddingTop:'18px' }}>Load</p>\n        </div>\n            <div className={`select-button`}>\n             <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n             </div>\n        \n\n        </div>\n\n        <div className={`select-state-button`}>\n            <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n        </div>\n\n        </>\n    );\n    function RunPythonMain(e) {\n            console.log(\"ran second fetch\", e)\n            fetch(`/select_party${e}`).then(\n                res => res.json()\n            ).then(\n                data => {\n                    setData(data)\n                    console.log(\"default fetch run\")\n                    console.log(data)\n                }\n            )\n        }\n}\n\n\n\nexport default ClickCountButton2;\n\n\n// var count = 1;\n// var d1 = [1, 2, 3];\n// var reference;\n\n// export default function DrawGraph(data1) {\n//     console.log(data1.members);\n//     const [data, setData] = useState('null')\n\n//     function handleMonth(e) {\n//         setData(e);\n//     }\n\n//     return (\n//         <div className='bar-chart'>\n//             <Bar\n//             data = {{\n//                 labels:data1.members,\n//                 datasets: [{\n//                     label: '# of votesk',\n//                     data: d1,\n//                 }\n    \n//                 ]\n//             }}\n//             height={400}\n//             width={600}\n//             // ref = {(reference) => this.reference = reference}\n//             />\n\n//         <div className={`button`}>\n//             <button value=\"/default_data_set\" onClick={TestNew}>Big Button</button>\n//         </div>\n            \n//         </div>\n\n//         )\n\n// }\n// async function TestNew(e) {\n//     // useState(false)\n//     var test = {}\n        \n//         test = await fetch(e.target.value).then(\n//             res => res.json()\n//         );\n//         // .then(\n//         //     data => {\n//         //         test = data\n//         //         console.log(data)\n//         //     }\n//         // )\n//         console.log(test)\n//         DrawGraph(test)\n\n// }\n\n\n\n\n{/* <p style={{ paddingTop:'18px' }}>View data</p> */}\n\n\n\n// const BarChart = () => {\n//     return (\n//     <div className='bar-chart'>\n//         <Bar\n//         data = {{\n//             labels:['red', 'blue'],\n//             datasets: [{\n//                 label: '# of votesk',\n//                 data: [1, 2, 3, 4],\n//             }\n\n//             ]\n//         }}\n//         height={400}\n//         width={600}\n//         />\n//     </div>\n//     )\n// }\n\n\n// export default BarChart;"]},"metadata":{},"sourceType":"module"}