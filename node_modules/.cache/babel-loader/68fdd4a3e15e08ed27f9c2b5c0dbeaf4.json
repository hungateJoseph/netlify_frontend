{"ast":null,"code":"var _jsxFileName = \"/Users/josephhungate/my-app-copy/src/DrawGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Bar, Line, Pie, Scatter } from 'react-chartjs-2';\nimport Select from 'react-select';\nimport LineGraph from 'react-line-graph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ClickCountButton2(data1) {\n  _s();\n\n  console.log(\"data13 default val state is \", data1);\n  const [data13, setData1] = useState(data1);\n  const [inputparty, setParty] = useState(\"\");\n  const [inputstate, setState] = useState(\"\");\n  const [inputhouse, setHouse] = useState(\"\");\n  const [graphtype, setGraph] = useState(true);\n  var graphData = data1;\n  var selectedParty = \"Both\";\n  var selectedState = \"\";\n  var selectedHouse = \"Both\";\n  var x_axis_label = \"\";\n  var labeledstate = \"\";\n  console.log(\"data12 default val state is \", data13);\n\n  if (inputparty != \"\") {\n    console.log(\"default party has not been picked\");\n    selectedParty = inputparty;\n  }\n\n  if (inputstate != \"\") {\n    selectedState = inputstate;\n  }\n\n  if (inputhouse != \"\") {\n    selectedHouse = inputhouse;\n  }\n\n  if (Object.keys(data13).length > 0) {\n    console.log(\"hit if statement\");\n    graphData = data13;\n  }\n\n  console.log(\"selectedparty var \", selectedParty);\n  var partylist = [{\n    value: \"Democrat\",\n    label: \"Democrats\"\n  }, {\n    value: \"Republican\",\n    label: \"Republicans\"\n  }, {\n    value: \"Both\",\n    label: \"Both\"\n  }];\n  var houselist = [{\n    value: \"House\",\n    label: \"House\"\n  }, {\n    value: \"Senate\",\n    label: \"Senate\"\n  }, {\n    value: \"Both\",\n    label: \"Both\"\n  }];\n  var statelist = [{\n    value: \"AL\",\n    label: \"AL\"\n  }, {\n    value: \"AK\",\n    label: \"AK\"\n  }, {\n    value: \"AZ\",\n    label: \"AZ\"\n  }, {\n    value: \"AR\",\n    label: \"AR\"\n  }, {\n    value: \"CA\",\n    label: \"CA\"\n  }, {\n    value: \"CO\",\n    label: \"CO\"\n  }, {\n    value: \"CT\",\n    label: \"CT\"\n  }, {\n    value: \"DE\",\n    label: \"DE\"\n  }, {\n    value: \"FL\",\n    label: \"FL\"\n  }, {\n    value: \"GA\",\n    label: \"GA\"\n  }, {\n    value: \"HI\",\n    label: \"HI\"\n  }, {\n    value: \"ID\",\n    label: \"ID\"\n  }, {\n    value: \"IL\",\n    label: \"IL\"\n  }, {\n    value: \"IN\",\n    label: \"IN\"\n  }, {\n    value: \"IA\",\n    label: \"IA\"\n  }, {\n    value: \"KS\",\n    label: \"KS\"\n  }, {\n    value: \"KY\",\n    label: \"KY\"\n  }, {\n    value: \"LA\",\n    label: \"LA\"\n  }, {\n    value: \"ME\",\n    label: \"ME\"\n  }, {\n    value: \"MD\",\n    label: \"MD\"\n  }, {\n    value: \"MA\",\n    label: \"MA\"\n  }, {\n    value: \"MI\",\n    label: \"MI\"\n  }, {\n    value: \"MN\",\n    label: \"MN\"\n  }, {\n    value: \"MS\",\n    label: \"MS\"\n  }, {\n    value: \"MO\",\n    label: \"MO\"\n  }, {\n    value: \"MT\",\n    label: \"MT\"\n  }, {\n    value: \"NE\",\n    label: \"NE\"\n  }, {\n    value: \"NV\",\n    label: \"NV\"\n  }, {\n    value: \"NH\",\n    label: \"NH\"\n  }, {\n    value: \"NJ\",\n    label: \"NJ\"\n  }, {\n    value: \"NM\",\n    label: \"NM\"\n  }, {\n    value: \"NY\",\n    label: \"NY\"\n  }, {\n    value: \"NC\",\n    label: \"NC\"\n  }, {\n    value: \"ND\",\n    label: \"ND\"\n  }, {\n    value: \"OH\",\n    label: \"OH\"\n  }, {\n    value: \"OK\",\n    label: \"OK\"\n  }, {\n    value: \"OR\",\n    label: \"OR\"\n  }, {\n    value: \"PA\",\n    label: \"PA\"\n  }, {\n    value: \"RI\",\n    label: \"RI\"\n  }, {\n    value: \"SC\",\n    label: \"SC\"\n  }, {\n    value: \"SD\",\n    label: \"SD\"\n  }, {\n    value: \"TN\",\n    label: \"TN\"\n  }, {\n    value: \"TX\",\n    label: \"TX\"\n  }, {\n    value: \"UT\",\n    label: \"UT\"\n  }, {\n    value: \"VT\",\n    label: \"VT\"\n  }, {\n    value: \"VA\",\n    label: \"VA\"\n  }, {\n    value: \"WA\",\n    label: \"WA\"\n  }, {\n    value: \"WV\",\n    label: \"WV\"\n  }, {\n    value: \"WI\",\n    label: \"WI\"\n  }, {\n    value: \"WY\",\n    label: \"WY\"\n  }];\n\n  const partyHandler = e => {\n    setParty(e.value);\n    selectedParty = e.value;\n    console.log(\"buton clicked \", e.value);\n  };\n\n  const stateHandler = e => {\n    setState(e.value);\n    selectedState = e.value;\n    console.log(\"buton clicked \", e.value);\n  };\n\n  const houseHandler = e => {\n    setHouse(e.value);\n    selectedHouse = e.value;\n    console.log(\"buton clicked \", e.value);\n  };\n\n  const graphHandler = e => {\n    setGraph(e);\n    console.log(\"buton clicked \", e);\n    RunPythonMain(data1);\n  };\n\n  var datanull = \"\";\n  console.log(\"notnot null init valu\", graphData.state);\n\n  if (typeof graphData.state !== 'undefined') {\n    console.log(\"notnot null\");\n    datanull = graphData.state;\n  }\n\n  if (graphtype == true) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: data13.labels,\n            datasets: [{\n              label: `Tweet Sentiment Score Sorted by Category`,\n              data: data13.averages,\n              backgroundColor: \"#007399\",\n              barThickness: 80,\n              borderColor: \"#cc66ff\"\n            }]\n          },\n          height: 400,\n          width: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `load-button ${'button-active'}`,\n          onClick: () => RunPythonMain([selectedParty, selectedState, selectedHouse]),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              paddingTop: '18px'\n            },\n            children: \"Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `select-button`,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Party\",\n            options: partylist,\n            onChange: partyHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `select-state-button`,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"State\",\n            options: statelist,\n            onChange: stateHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select-house-button`,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Chamber\",\n          options: houselist,\n          onChange: houseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        class: \"inline\",\n        id: \"one\",\n        value: \"Bar Graph\",\n        onClick: () => graphHandler(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        class: \"inline\",\n        id: \"one\",\n        value: \"Line Graph\",\n        onClick: () => graphHandler(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (graphtype == false) {\n    // const line_data = [1, 2]\n    // var final_array = []\n    // console.log(\"raw line graph data is \", data13)\n    // var dict = []\n    // var counter = 0\n    // for (var k in data13) {\n    //     console.log(\"stripped individual #followers \", k)\n    //     console.log(\"stripped individual sentiment \", data13[k])\n    //     dict.push({\n    //         x: parseInt(k),\n    //         y: data13[k]\n    //     })\n    //     final_array.push(dict[counter])\n    //     counter += 1\n    // }\n    // console.log(\"dict is \", dict)\n    // console.log(\"dict stripped is \", dict[0])\n    // console.log(\"final array \", final_array)\n    // if (inputhouse == \"Senate\") {\n    //     if (inputstate != \"\") {\n    //     }\n    // }\n    var dict = [];\n    var last_sentiment = 0.3;\n    var switcher = 1;\n    var new_val = 0.0;\n\n    for (let i = 0; i < 70; i++) {\n      if (i % 10 == 0) {\n        switcher = switcher * -1;\n      } // return Math.random() * (max - min) + min\n      // start = 0.3, max is 0.8\n\n\n      let add_on = (Math.random() * (0.1 - 0.05) + 0.05) * switcher;\n\n      if (last_sentiment + add_on > 0.85) {\n        new_val = last_sentiment - add_on;\n        switcher = switcher * -1;\n      } else if (last_sentiment - add_on < 0.1) {\n        new_val = last_sentiment + add_on;\n        switcher = switcher * -1;\n      }\n\n      dict.push({\n        x: Math.random() * (1000 * (i + 1) - 1000 * i) + 1000 * i,\n        y: new_val\n      });\n      last_sentiment = new_val;\n    }\n\n    console.log(\"dict is \", dict);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bar-chart\",\n        children: /*#__PURE__*/_jsxDEV(Scatter, {\n          data: {\n            datasets: [{\n              label: 'Tweet Sentiment Score Graphed by Number of Followers',\n              data: dict,\n              borderColor: \"#007399\",\n              backgroundColor: \"#007399\",\n              pointRadius: 0,\n              showLine: true\n            }]\n          },\n          height: 400,\n          width: 600\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `load-button ${'button-active'}`,\n          onClick: () => RunPythonMain([selectedParty, selectedState, selectedHouse]),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              paddingTop: '18px'\n            },\n            children: \"Load\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `select-button`,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Party\",\n            options: partylist,\n            onChange: partyHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `select-state-button`,\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"State\",\n            options: statelist,\n            onChange: stateHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `select-house-button`,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Chamber\",\n          options: houselist,\n          onChange: houseHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        class: \"inline\",\n        id: \"one\",\n        value: \"Bar Graph\",\n        onClick: () => graphHandler(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        class: \"inline\",\n        id: \"one\",\n        value: \"Line Graph\",\n        onClick: () => graphHandler(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true);\n  }\n\n  function RunPythonMain(e) {\n    console.log(\"ran second fetch\", e[0]); // labeledstate = `: ${inputstate}`\n\n    if (graphtype == true) {\n      if (e[0] == \"Republican\") {\n        var rnd = Array.from({\n          length: 40\n        }, () => Math.random() * 1);\n        console.log(\"rand\", rnd);\n        setData1({\n          \"labels\": [\"Republicans\"],\n          \"averages\": rnd,\n          \"state\": [\"\"]\n        });\n      } else if (e[0] == \"Democrat\") {\n        var rnd1 = Array.from({\n          length: 40\n        }, () => Math.random() * 1);\n        console.log(\"rand\", rnd);\n        setData1({\n          \"labels\": [\"Democrats\"],\n          \"averages\": rnd1,\n          \"state\": [\"\"]\n        });\n      } else {\n        var rnd2 = Array.from({\n          length: 40\n        }, () => Math.random() * 1);\n        setData1({\n          \"labels\": [\"Democrats\", \"Republicans\"],\n          \"averages\": rnd2,\n          \"state\": [\"\"]\n        });\n      } //     fetch(`/select_data${JSON.stringify(e)}`).then(\n      //     res => res.json()\n      //     ).then(\n      //     data => {\n      //         setData1(data)\n      //         console.log(\"default fetch run\")\n      //         console.log(data)\n      //     }\n      //  )\n\n    }\n\n    if (graphtype == false) {\n      // fetch(`/line_graph_data${JSON.stringify(e)}`).then(\n      //     res => res.json()\n      // ).then(\n      //     data => {\n      //         setData1(data)\n      //         console.log(\"default line graph data\", data)\n      //         console.log(data)\n      //     }\n      // )\n      // setData1({\"20,000\": 1},{\"10,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},)\n      setData1({\n        \"labels\": [\"Democrats\", \"Republicans\"],\n        \"averages\": rnd2,\n        \"state\": [\"\"]\n      });\n    }\n  }\n}\n\n_s(ClickCountButton2, \"Rn5yP1yHITOxOv22uYKpfD1qZJM=\");\n\n_c = ClickCountButton2;\nexport default ClickCountButton2;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClickCountButton2\");","map":{"version":3,"sources":["/Users/josephhungate/my-app-copy/src/DrawGraph.js"],"names":["React","useState","Bar","Line","Pie","Scatter","Select","LineGraph","ClickCountButton2","data1","console","log","data13","setData1","inputparty","setParty","inputstate","setState","inputhouse","setHouse","graphtype","setGraph","graphData","selectedParty","selectedState","selectedHouse","x_axis_label","labeledstate","Object","keys","length","partylist","value","label","houselist","statelist","partyHandler","e","stateHandler","houseHandler","graphHandler","RunPythonMain","datanull","state","labels","datasets","data","averages","backgroundColor","barThickness","borderColor","paddingTop","dict","last_sentiment","switcher","new_val","i","add_on","Math","random","push","x","y","pointRadius","showLine","rnd","Array","from","rnd1","rnd2"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {Bar, Line, Pie, Scatter} from 'react-chartjs-2'\nimport Select from 'react-select'\nimport LineGraph from 'react-line-graph'\n\n\n\nfunction ClickCountButton2(data1) {\n    console.log(\"data13 default val state is \", data1)\n    const [data13, setData1] = useState(data1)\n    const [inputparty, setParty] = useState(\"\");\n    const [inputstate, setState] = useState(\"\");\n    const [inputhouse, setHouse] = useState(\"\");\n\n    const [graphtype, setGraph] = useState(true);\n\n    var graphData = data1\n    var selectedParty = \"Both\"\n    var selectedState = \"\"\n    var selectedHouse = \"Both\"\n    var x_axis_label = \"\"\n    var labeledstate = \"\" \n    console.log(\"data12 default val state is \", data13)\n\n    if (inputparty != \"\") {\n        console.log(\"default party has not been picked\");\n        selectedParty = inputparty\n    }\n    if (inputstate != \"\" ) {\n        selectedState = inputstate\n    }\n\n    if (inputhouse != \"\" ) {\n        selectedHouse = inputhouse\n    }\n\n    if (Object.keys(data13).length > 0) {\n        console.log(\"hit if statement\")\n        graphData = data13\n    }\n\n    console.log(\"selectedparty var \", selectedParty)\n    var partylist = [\n        {\n            value:\"Democrat\",\n            label:\"Democrats\"\n        },\n        {\n            value:\"Republican\",\n            label:\"Republicans\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n]\n\n    var houselist = [\n        {\n            value:\"House\",\n            label:\"House\"\n        },\n        {\n            value:\"Senate\",\n            label:\"Senate\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n    ]\n\n    var statelist = [\n        {value:\"AL\", label:\"AL\"}, {value:\"AK\", label:\"AK\"}, {value:\"AZ\", label:\"AZ\"}, {value:\"AR\", label:\"AR\"}, {value:\"CA\", label:\"CA\"}, {value:\"CO\", label:\"CO\"}\n        , {value:\"CT\", label:\"CT\"}, {value:\"DE\", label:\"DE\"}, {value:\"FL\", label:\"FL\"}, {value:\"GA\", label:\"GA\"}, {value:\"HI\", label:\"HI\"}, {value:\"ID\", label:\"ID\"}\n        , {value:\"IL\", label:\"IL\"}, {value:\"IN\", label:\"IN\"}, {value:\"IA\", label:\"IA\"}, {value:\"KS\", label:\"KS\"}, {value:\"KY\", label:\"KY\"}, {value:\"LA\", label:\"LA\"}\n        , {value:\"ME\", label:\"ME\"}, {value:\"MD\", label:\"MD\"}, {value:\"MA\", label:\"MA\"}, {value:\"MI\", label:\"MI\"}, {value:\"MN\", label:\"MN\"}, {value:\"MS\", label:\"MS\"}\n        , {value:\"MO\", label:\"MO\"}, {value:\"MT\", label:\"MT\"}, {value:\"NE\", label:\"NE\"}, {value:\"NV\", label:\"NV\"}, {value:\"NH\", label:\"NH\"}, {value:\"NJ\", label:\"NJ\"}\n        , {value:\"NM\", label:\"NM\"}, {value:\"NY\", label:\"NY\"}, {value:\"NC\", label:\"NC\"}, {value:\"ND\", label:\"ND\"}, {value:\"OH\", label:\"OH\"}, {value:\"OK\", label:\"OK\"}\n        , {value:\"OR\", label:\"OR\"}, {value:\"PA\", label:\"PA\"}, {value:\"RI\", label:\"RI\"}, {value:\"SC\", label:\"SC\"}, {value:\"SD\", label:\"SD\"}, {value:\"TN\", label:\"TN\"}\n        , {value:\"TX\", label:\"TX\"}, {value:\"UT\", label:\"UT\"}, {value:\"VT\", label:\"VT\"}, {value:\"VA\", label:\"VA\"}, {value:\"WA\", label:\"WA\"}, {value:\"WV\", label:\"WV\"}\n        , {value:\"WI\", label:\"WI\"}, {value:\"WY\", label:\"WY\"}\n    ]\n\n    \n    const partyHandler = e => {\n        setParty(e.value);\n        selectedParty = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const stateHandler = e => {\n        setState(e.value);\n        selectedState = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const houseHandler = e => {\n        setHouse(e.value);\n        selectedHouse = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const graphHandler = e => {\n        setGraph(e);\n        console.log(\"buton clicked \", e);\n        RunPythonMain(data1)\n    }\n\n    var datanull = \"\"\n    console.log(\"notnot null init valu\", graphData.state)\n    if (typeof graphData.state !== 'undefined') {\n        console.log(\"notnot null\")\n        datanull = graphData.state\n    }\n\n    if (graphtype == true) {\n        return (\n            <>\n            <div className='bar-chart'>\n                 <Bar \n                data = {{\n                    labels:data13.labels,\n                    datasets: [{\n                        label: `Tweet Sentiment Score Sorted by Category`,\n                        data: data13.averages,\n                        backgroundColor: \"#007399\",\n                        barThickness: 80,\n                        borderColor: \"#cc66ff\"\n                          \n                    }\n                    \n                    \n                    ],\n        \n                }\n            \n            \n            }\n                \n                \n                height={400}\n                width={600}\n                />\n            \n\n            </div>\n            <div>\n                <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n\n    \n            </>\n        );\n    }\n    if (graphtype == false) {\n        // const line_data = [1, 2]\n        // var final_array = []\n        // console.log(\"raw line graph data is \", data13)\n        // var dict = []\n        // var counter = 0\n        // for (var k in data13) {\n        //     console.log(\"stripped individual #followers \", k)\n        //     console.log(\"stripped individual sentiment \", data13[k])\n        //     dict.push({\n        //         x: parseInt(k),\n        //         y: data13[k]\n        //     })\n        //     final_array.push(dict[counter])\n        //     counter += 1\n        // }\n        // console.log(\"dict is \", dict)\n        // console.log(\"dict stripped is \", dict[0])\n        // console.log(\"final array \", final_array)\n        // if (inputhouse == \"Senate\") {\n        //     if (inputstate != \"\") {\n                \n        //     }\n        // }\n        var dict = []\n        var last_sentiment = 0.3\n        var switcher = 1\n        var new_val = 0.0\n                for (let i = 0; i < 70; i ++) {\n                    if (i % 10 == 0) {\n                        switcher = switcher * (-1)\n                    }\n                    // return Math.random() * (max - min) + min\n                    // start = 0.3, max is 0.8\n                    let add_on = (Math.random() * (0.1 - 0.05) + 0.05) * switcher\n                    if (last_sentiment + add_on > 0.85) {\n                        new_val = last_sentiment - add_on\n                        switcher = switcher * (-1)\n                    }\n                    else if (last_sentiment - add_on < 0.1) {\n                        new_val = last_sentiment + add_on\n                        switcher = switcher * (-1)\n                    }\n                    dict.push({\n                        x: Math.random() * (1000*(i+1) - 1000*i) + 1000*i,\n                        y: new_val\n                    })\n                    last_sentiment = new_val \n                }\n                console.log(\"dict is \", dict)\n        return (\n            \n            <>\n            <div className='bar-chart'>\n                <Scatter\n                data = {\n                    {\n                    \n                    datasets: [{\n                        label: 'Tweet Sentiment Score Graphed by Number of Followers',\n                        data: dict,\n                        borderColor: \"#007399\",\n                        backgroundColor: \"#007399\",\n                        pointRadius: 0,\n                        showLine: true\n                    }]\n                }\n                \n            }\n                \n                height={400}\n                width={600}\n                />\n            \n            </div>\n            <div>\n            <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n            \n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n    \n            </>\n        );\n    }\n    \n    function RunPythonMain(e) {\n            console.log(\"ran second fetch\", e[0])\n            // labeledstate = `: ${inputstate}`\n            if (graphtype == true) {\n                if (e[0] == \"Republican\") {\n                    var rnd = Array.from({length: 40}, () => (Math.random() * 1));\n                    console.log(\"rand\", rnd)\n                    setData1({\"labels\" : [\"Republicans\"], \"averages\" : rnd, \"state\" : [\"\"]})\n                }\n                else if (e[0] == \"Democrat\") {\n                    var rnd1 = Array.from({length: 40}, () => (Math.random() * 1));\n                    console.log(\"rand\", rnd)\n                    setData1({\"labels\" : [\"Democrats\"], \"averages\" : rnd1, \"state\" : [\"\"]})\n                }\n                else {\n                    var rnd2 = Array.from({length: 40}, () => (Math.random() * 1));\n                    setData1({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : rnd2, \"state\" : [\"\"]})\n                }\n            //     fetch(`/select_data${JSON.stringify(e)}`).then(\n            //     res => res.json()\n            //     ).then(\n            //     data => {\n            //         setData1(data)\n            //         console.log(\"default fetch run\")\n            //         console.log(data)\n\n            //     }\n            //  )\n            \n            }\n            if (graphtype == false) {\n            // fetch(`/line_graph_data${JSON.stringify(e)}`).then(\n            //     res => res.json()\n            // ).then(\n            //     data => {\n            //         setData1(data)\n            //         console.log(\"default line graph data\", data)\n            //         console.log(data)\n\n            //     }\n            // )\n            // setData1({\"20,000\": 1},{\"10,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},)\n                \n                \n                setData1({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : rnd2, \"state\" : [\"\"]})\n            }\n        }\n\n}\n\n\n\nexport default ClickCountButton2;"]},"metadata":{},"sourceType":"module"}