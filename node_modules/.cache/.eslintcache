[{"/Users/josephhungate/my-app/src/index.js":"1","/Users/josephhungate/my-app/src/App.js":"2","/Users/josephhungate/my-app/src/navbar.js":"3","/Users/josephhungate/my-app/src/About.js":"4","/Users/josephhungate/my-app/src/Navbar.js":"5","/Users/josephhungate/my-app/src/TwitterTool.js":"6","/Users/josephhungate/my-app/src/ProjectOverview.js":"7","/Users/josephhungate/my-app/src/Military_Service.js":"8","/Users/josephhungate/my-app/src/DrawGraph.js":"9","/Users/josephhungate/my-app-copy/src/index.js":"10","/Users/josephhungate/my-app-copy/src/App.js":"11","/Users/josephhungate/my-app-copy/src/Navbar.js":"12","/Users/josephhungate/my-app-copy/src/TwitterTool.js":"13","/Users/josephhungate/my-app-copy/src/ProjectOverview.js":"14","/Users/josephhungate/my-app-copy/src/About.js":"15","/Users/josephhungate/my-app-copy/src/Military_Service.js":"16","/Users/josephhungate/my-app-copy/src/DrawGraph.js":"17"},{"size":588,"mtime":1650856941081,"results":"18","hashOfConfig":"19"},{"size":1875,"mtime":1650935712162,"results":"20","hashOfConfig":"19"},{"size":4004,"mtime":1650940663766,"results":"21","hashOfConfig":"19"},{"size":2050,"mtime":1651168168901,"results":"22","hashOfConfig":"19"},{"size":3953,"mtime":1651012710312,"results":"23","hashOfConfig":"19"},{"size":910,"mtime":1651161858132,"results":"24","hashOfConfig":"19"},{"size":3615,"mtime":1651163534179,"results":"25","hashOfConfig":"19"},{"size":1791,"mtime":1650927573845,"results":"26","hashOfConfig":"19"},{"size":10148,"mtime":1651196775753,"results":"27","hashOfConfig":"19"},{"size":408,"mtime":1651207177541,"results":"28","hashOfConfig":"29"},{"size":991,"mtime":1651267644536,"results":"30","hashOfConfig":"29"},{"size":3946,"mtime":1651267685141,"results":"31","hashOfConfig":"29"},{"size":943,"mtime":1651206521663,"results":"32","hashOfConfig":"29"},{"size":3215,"mtime":1651267211965,"results":"33","hashOfConfig":"29"},{"size":1587,"mtime":1651266668832,"results":"34","hashOfConfig":"29"},{"size":1751,"mtime":1651268482355,"results":"35","hashOfConfig":"29"},{"size":12737,"mtime":1651546104993,"results":"36","hashOfConfig":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1oruqht",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"4vf11a",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},"/Users/josephhungate/my-app/src/index.js",[],[],[],"/Users/josephhungate/my-app/src/App.js",["105","106","107"],[],"import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport React, {Suspense, lazy} from 'react';\nimport Navbar from \"./Navbar.js\"\nimport About from \"./About.js\"\nimport TwitterTool from './TwitterTool.js'\nimport ProjectOverview from './ProjectOverview.js';\nimport Military_Service from './Military_Service';\n\n\nfunction App() {\n    return (\n        <>\n        <Navbar></Navbar>\n        <Suspense fallback={<About />}>\n        <Routes>\n        <Route exact path=\"/financial-scraping-overview\" element={<ProjectOverview/>}>\n        </Route>\n        <Route exact path=\"/TwitterTool\" element={<TwitterTool/>}>\n        </Route>\n          <Route exact path=\"/about\" element={<About/>}>\n          </Route>\n          <Route exact path=\"/military-service\" element={<Military_Service/>}>\n          </Route>\n          <Route exact path=\"/\" element={<About/>}>\n          </Route>\n        </Routes>\n        </Suspense>\n        </>\n    );\n  }\n\nexport default App;\n\n\n// <>\n//       <About />\n//       <navbar></navbar>\n//       <Routes>\n//       <Route exact path=\"/\"> \n//           <About />\n//       </Route>\n//       </Routes>\n//       </>\n\n\n// <BrowserRouter>\n//       <div className=\"App\" style={{ backgroundImage: \"url(./circle.jpg)\" }}>\n//         <Header />\n//         <Routes>\n//           <Route exact path=\"/\" component={Home} />\n//           <Route path=\"/quiz\" component={Quiz} />\n//           <Home />\n//         </Routes>\n//       </div>\n//       <Footer />\n//     </BrowserRouter>\n//   );\n\n\n\n// <BrowserRouter>\n//       <div className=\"App\" style={{ backgroundImage: \"url(./circle.jpg)\" }}>\n//         <Header />\n//         <Routes>\n//           <Route exact path=\"/\" element={<Home/>} />\n//           <Route path=\"/quiz\" element={<Quiz/>} />\n         \n//         </Routes>\n//       </div>\n//       <Footer />\n//     </BrowserRouter>","/Users/josephhungate/my-app/src/navbar.js",[],[],[],"/Users/josephhungate/my-app/src/About.js",["108","109","110","111","112","113","114"],[],"import './App.css';\nimport React from 'react';\nimport Military_Service from './Military_Service';\nimport LineGraph from 'react-line-graph'\n\n\nexport default function About() {\n    // const line_data = [[1, 2], [2, 3], [3, 4]]\n    return (\n        <>\n        {/* <LineGraph\n                    // data = {line_data}\n                /> */}\n        <div className='main-container'>\n        <div className='about-container'>\n        <p className='about'>\n        My name is <a className='emphasis'>Joseph Hungate</a> and I maintain this website as a record of my current and past projects, interests, and experience. \n        <br /><br />\n        I am particularly interested in <a className='emphasis'>educational technology and design</a>, \n        and want to build <a className='emphasis'>new solutions to help bridge continuing gaps in skill-based learning and job education</a>.  \n        As a full-time MBA candidate at <a className='emphasis'>UC Berkeley Haas</a>, I am focused on marketing, analytics, and human-centered design.\n        <br /><br />\n        I recently exited the U.S. Army, where I served as an Air Defense Artillery Officer for four years. See \n        the <a className='emphasis' onClick={() => {Military_Service()}}>Military Service</a> section   \n        for more information on my duties and experiences in that role.\n        <br /><br /> \n        I grew up in Portland, OR, earned a Bachelor's in Computer Science from Rice University, \n        and have lived and worked in Los Angeles, Princeton, and Philadelphia. I am currently based in Portland, OR.\n        <br /><br />\n        <a href='https://www.linkedin.com/in/joseph-hungate-89061692/' target='blank' className='emphasis' style={{textDecoration:'underline'}}>LinkedIn</a>\n        </p>\n        </div>\n        </div>\n        </>\n    )\n\n}\n\n{/* <Link to=\"/military-service\">\n        <div className='header-link navlink'>\n        <a className='header-link-text' onClick={() => {\n        setFin(false);\n        }}>Military Service</a>\n        </div>\n        </Link> */}",[],"/Users/josephhungate/my-app/src/Navbar.js",["115","116","117","118","119","120","121","122","123","124","125","126"],[],"import React, {useState} from 'react';\nimport './App.css'\nimport {  Link } from \"react-router-dom\";\nimport Logo from './inkpx-word-art1.png';\nimport Menu from './menu-icon.png'\n\n\nexport default function Navbar() {\n\n    const [message, setMessage] = useState(false);\n    const [fin, setFin] = useState(false);\n    const [hamburger, setHamburger] = useState(false);\n  \n    function handleCopiedMessage(event) {\n        event.preventDefault();\n        updateClipboard(\"hungatejoseph@gmail.com\");\n  \n        setTimeout(function () {\n          setMessage(false);\n        }, 1500);\n  \n        setMessage(true);\n  \n      }\n  \n      function updateClipboard(newClip) {\n        navigator.clipboard.writeText(newClip).then(function() {\n          /* clipboard successfully set */\n        }, function() {\n          /* clipboard write failed */\n        });\n      }\n  \n    return (\n      <>\n      <div className={`copied ${message ? 'display' : 'hide'}`}>\n        <p> </p>\n        <p>Email address copied!</p>\n        </div>\n\n      {!hamburger &&\n      <div className='menu' onClick={() => {\n        setHamburger(true);\n      }}>\n        <img className='hamburger' src={Menu}></img>\n      </div>\n      }\n  \n      {hamburger &&\n        <div className='menu-expanded'>\n  \n        <div className={`copied-phone ${message ? 'display' : 'hide'}`}>\n        <p>Email address copied!</p>\n        </div>\n  \n        <Link to=\"/about\" className='menu-link'>\n        <a className='phone-menu' onClick={() => {\n        setHamburger(false);\n        }}> About</a>\n        </Link>\n        <br />\n        {/* <a className='phone-menu' href=''\n        onClick={handleCopiedMessage}>\n        Contact</a>\n        <br /> */}\n        <Link to=\"/military-service\">\n        <a className='phone-menu' onClick={() => {\n        setHamburger(false);\n        }}>Military Service</a>\n        </Link>\n        <br />\n        <p className='phone-menu' style={{marginBottom:'5px'}} onClick={() => {\n          setFin(!fin)\n        }}>Political Tweet Analysis</p>\n        <div className={`${fin ? 'phone-active' : 'hidden'}`}>\n        <Link exact to=\"/financial-scraping-overview\">\n        <a className='phone-menu sub'  onClick={() => {\n        setHamburger(false);\n        }}>\n        —  Project Overview\n        </a>\n        </Link>\n        <br />\n        <Link exact to=\"/TwitterTool\">\n        <a className='phone-menu sub' onClick={() => {\n        setHamburger(false);\n        }}>\n        —  Analysis Tool\n        </a>\n        </Link>\n        </div>\n      </div>\n      }\n  \n  \n      <Link to=\"/\">\n      <img src={Logo} className='logo' onClick={() => {\n        setFin(false);\n      }}/>\n      </Link>\n  \n      <div className='header-container'>\n  \n      <div className='header-link navlink' style={{height:'100px'}}>\n      <a href='' onClick={(e) => {\n        e.preventDefault();\n        setFin(true);\n      }} className='header-link-text'>Political Tweet Tool</a>\n      <div className={`financial-subhead ${fin ? 'financial-active' : ''}`}>\n        <p>|</p>\n        <Link exact to=\"/financial-scraping-overview\">\n        <p style={{textAlign:'right'}}><a>Project Overview</a></p>\n        </Link>\n        <Link exact to=\"/TwitterTool\">\n        <a>Analysis Tool</a>\n        </Link>\n      </div>\n      </div>\n  \n      <Link to=\"/military-service\">\n        <div className='header-link navlink'>\n        <a className='header-link-text'>Military Service</a>\n        </div>\n        </Link>\n  \n      <div className='header-link navlink'>\n      <a className='header-link-text' href=''\n      onClick={handleCopiedMessage}>\n      Contact</a>\n      </div>\n  \n      <Link to=\"/about\">\n      <div className='header-link navlink'>\n      <a className='header-link-text'>About</a>\n      </div>\n      </Link>\n      </div>\n      </>\n    );\n  }\n\n// const navbar= () =>{\n//   return (\n//   <div>\n//     <li>\n//       <Link to=\"/welcome \">About</Link>\n//     </li>\n//   </div>\n//   );\n// }\n// export default navbar;","/Users/josephhungate/my-app/src/TwitterTool.js",["127","128","129","130","131","132"],[],"import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {Bar} from 'react-chartjs-2'\nimport BarChart from './DrawGraph.js'\nimport {Chart as ChartJS} from 'chart.js/auto'\nimport DrawGraph from './DrawGraph.js';\nimport About from './About'\nimport ClickCountButton2 from './DrawGraph.js';\n\n\nexport default function TwitterTool() {\n\n    const [data1, setData] = useState({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : [0.432, 0.211], \"state\" : [\"\"]});\n    console.log(\"hello\")\n\n    useEffect(() => {\n        console.log(\"fetch attempted\")\n        fetch(\"/members\").then(\n            res => res.json()\n        ).then(\n            data => {\n                console.log(\"first data val\", data)\n                setData(data)\n                \n            }\n        )\n    }, [])\n\n    console.log(\"reached func with\", data1)\n    return (\n        \n        ClickCountButton2(data1)\n    )\n    \n}","/Users/josephhungate/my-app/src/ProjectOverview.js",["133","134","135","136"],[],"import './App.css';\nimport React from 'react';\nimport {Navigate, Outlet} from 'react-router-dom'\n\n\n\nexport default function ProjectOverview() {\n\n    return (\n        <>\n        <div className='main-container'>\n        <div className='about-container'>\n        <h3>Inspiration</h3>\n        <p className='about'>\n        \n        During his presidency, Donald Trump was such a prolific Tweeter that specific tools were developed to alert companies when he tweeted \n        about their stock. Now, out of the 535 sitting Members of the U.S. Congress, only five have inactive Twitter accounts. What correlations can be drawn between\n        their tweets and political activities or events throughout the country? The <a className='emphasis'>Political Tweet Tool</a> aims to analyze the behavior of politicians' tweets and see\n        what conclusions can be drawn.\n        <br /><br />\n        <h2>Development</h2>\n        I began by creating a Twitter Developer account, which allowed me to utilize the Twitter API for the tweet scraping part of this project. After writing some basic Python\n        to retrieve the 535 Congress twitter handles from the House press gallery website, I was ready to start gathering data. \n        <br /><br />\n        I used the <a className='emphasis' href='https://www.tweepy.org/' target='blank'>Tweepy</a> Python library to facilitate the tweet scraping process. I \n        then integrated the Tweepy API with a custom politician data structure that would facilitate both the later SQL filtering and sentiment analysis. \n        As a web-hosted project, only twenty tweets are gathered per congressman/congresswoman in any given day range. This is to reduce loading times\n        for the end user. Larger data sets can be implemented with a direct download of this project from my <a className='emphasis'>Github</a>.\n        <br /><br />\n        The resulting dataset contains over 10,000 tweets for any selected date range,\n        which can be further filtered by name, district, state, party, time in office, retweet status, etc.\n        <br /><br />\n        <h2>Sentiment Analysis</h2>\n        I used the <a className='emphasis' href='https://www.nltk.org/_modules/nltk/sentiment/vader.html' target='blank'>VADER (Valence Aware Dictionary and sEntiment Reasoner)</a> analysis tool to establish a baseline sentiment rating for each tweet. Although\n        robust in nature, the VADER lexicon lacked certain key features necessary for an authentic tweet analysis. \n        <br /><br />\n        First, each tweet was cleaned to remove\n        superfluous text such as links and images. Next, I updated the VADER lexicon to include emojis and \"@TwitterHandle\" references. For example,\n        in the tweet \"When is @JosephHungate123 going to take responsibility for the horrible state of this website?\" it's necessary for VADER to know\n        that \"@JosephHungate123\" is a person that the tweeter is assigning blame to.\n        <br /><br />\n        VADER generates a sentiment score between -1 and 1 for any given tweet, with -1 indicating an extremely negative sentiment, and 1 indicating\n        an extremely positive sentiment. \n        <br /><br />\n        <h2>Results</h2>\n        This tool is designed for robust customization, ease-of-use, and future data integration. As a preliminary conclusion, however, the default data displayed\n        indicates that the average Democrat's tweet is almost four times as positive as the average Republican's.\n        <br /><br />\n        <br /><br />\n        <br /><br />\n        </p>\n        </div>\n        </div>\n        </>\n    )\n\n}","/Users/josephhungate/my-app/src/Military_Service.js",["137","138"],[],"import './App.css';\nimport React from 'react';\nimport StartPic from './startpic.png'\nimport EndPic from './endpic.JPG'\n\nexport default function Military_Service() {\n    // img src={Logo} className='logo' on\n    return (\n        <>\n        <div className='main-container'>\n        <div className='about-container'>\n        <img src={StartPic} className='pic1'/>\n        <img src={EndPic} className='pic2'/>\n        <p className='about'>\n        As an Air Defense Artillery officer in the U.S. Army, I gained invaluable leadership, logistics, and operational management skills. \n        <br /><br />\n        After graduating from Rice University in 2017, I commissioned through the U.S. Army's Officer Candidate School (OCS) - a program that allows\n        civilians with college degrees to commission as Second Lieutenants. I chose to specialize in Air Defense Artillery through a strong interest in\n        long-range radar capabilities and missile-interception technology.\n        <br /><br />\n        My first major assignment was in Suwon, South Korea, where I served as a platoon leader and Tactical Control Officer (TCO). This was a demanding\n        role with a myriad of responsibilites, including monitoring for and intercepting Tatical Ballistic Missiles, commanding convoys across the \n        peninsula, and officiating live-fire ranges. (Picture here)\n        <br /><br /> \n        I finished my military career in Fort Bliss, TX, where I served as a company executive officer and operations officer. This was a senior\n        leadership role where, in addition to mentoring and supervising junior lieutenants, I served as a battalion finance officer and judicial investigative\n        officer.\n        <br /><br />\n        </p>\n        </div>\n        </div>\n        </>\n    )\n\n}","/Users/josephhungate/my-app/src/DrawGraph.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152"],[],"import React, {useState} from 'react'\nimport {Bar, Line, Pie, Scatter} from 'react-chartjs-2'\n// import Chart from 'chart.js'\nimport Select from 'react-select'\nimport LineGraph from 'react-line-graph'\n\n\n\nfunction ClickCountButton2(data1) {\n    console.log(\"data13 default val state is \", data1)\n    const [data13, setData1] = useState(data1)\n    const [inputparty, setParty] = useState(\"\");\n    const [inputstate, setState] = useState(\"\");\n    const [inputhouse, setHouse] = useState(\"\");\n\n    const [graphtype, setGraph] = useState(true);\n\n    var graphData = data1\n    var selectedParty = \"Both\"\n    var selectedState = \"\"\n    var selectedHouse = \"Both\"\n    var x_axis_label = \"\"\n    var labeledstate = \"\" \n    console.log(\"data12 default val state is \", data13)\n\n    if (inputparty != \"\") {\n        console.log(\"default party has not been picked\");\n        selectedParty = inputparty\n    }\n    if (inputstate != \"\" ) {\n        selectedState = inputstate\n    }\n\n    if (inputhouse != \"\" ) {\n        selectedHouse = inputhouse\n    }\n\n    if (Object.keys(data13).length > 0) {\n        console.log(\"hit if statement\")\n        graphData = data13\n    }\n\n    console.log(\"selectedparty var \", selectedParty)\n    var partylist = [\n        {\n            value:\"Democrat\",\n            label:\"Democrats\"\n        },\n        {\n            value:\"Republican\",\n            label:\"Republicans\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n]\n\n    var houselist = [\n        {\n            value:\"House\",\n            label:\"House\"\n        },\n        {\n            value:\"Senate\",\n            label:\"Senate\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n    ]\n\n    var statelist = [\n        {value:\"AL\", label:\"AL\"}, {value:\"AK\", label:\"AK\"}, {value:\"AZ\", label:\"AZ\"}, {value:\"AR\", label:\"AR\"}, {value:\"CA\", label:\"CA\"}, {value:\"CO\", label:\"CO\"}\n        , {value:\"CT\", label:\"CT\"}, {value:\"DE\", label:\"DE\"}, {value:\"FL\", label:\"FL\"}, {value:\"GA\", label:\"GA\"}, {value:\"HI\", label:\"HI\"}, {value:\"ID\", label:\"ID\"}\n        , {value:\"IL\", label:\"IL\"}, {value:\"IN\", label:\"IN\"}, {value:\"IA\", label:\"IA\"}, {value:\"KS\", label:\"KS\"}, {value:\"KY\", label:\"KY\"}, {value:\"LA\", label:\"LA\"}\n        , {value:\"ME\", label:\"ME\"}, {value:\"MD\", label:\"MD\"}, {value:\"MA\", label:\"MA\"}, {value:\"MI\", label:\"MI\"}, {value:\"MN\", label:\"MN\"}, {value:\"MS\", label:\"MS\"}\n        , {value:\"MO\", label:\"MO\"}, {value:\"MT\", label:\"MT\"}, {value:\"NE\", label:\"NE\"}, {value:\"NV\", label:\"NV\"}, {value:\"NH\", label:\"NH\"}, {value:\"NJ\", label:\"NJ\"}\n        , {value:\"NM\", label:\"NM\"}, {value:\"NY\", label:\"NY\"}, {value:\"NC\", label:\"NC\"}, {value:\"ND\", label:\"ND\"}, {value:\"OH\", label:\"OH\"}, {value:\"OK\", label:\"OK\"}\n        , {value:\"OR\", label:\"OR\"}, {value:\"PA\", label:\"PA\"}, {value:\"RI\", label:\"RI\"}, {value:\"SC\", label:\"SC\"}, {value:\"SD\", label:\"SD\"}, {value:\"TN\", label:\"TN\"}\n        , {value:\"TX\", label:\"TX\"}, {value:\"UT\", label:\"UT\"}, {value:\"VT\", label:\"VT\"}, {value:\"VA\", label:\"VA\"}, {value:\"WA\", label:\"WA\"}, {value:\"WV\", label:\"WV\"}\n        , {value:\"WI\", label:\"WI\"}, {value:\"WY\", label:\"WY\"}\n    ]\n\n    \n    const partyHandler = e => {\n        setParty(e.value);\n        selectedParty = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const stateHandler = e => {\n        setState(e.value);\n        selectedState = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const houseHandler = e => {\n        setHouse(e.value);\n        selectedHouse = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const graphHandler = e => {\n        setGraph(e);\n        // selectedHouse = e.value\n        console.log(\"buton clicked \", e);\n        RunPythonMain(data1)\n    }\n\n    var datanull = \"\"\n    console.log(\"notnot null init valu\", graphData.state)\n    if (typeof graphData.state !== 'undefined') {\n        console.log(\"notnot null\")\n        datanull = graphData.state\n    }\n\n    if (graphtype == true) {\n        return (\n            <>\n            <div className='bar-chart'>\n                 <Bar \n                data = {{\n                    labels:data13.labels,\n                    datasets: [{\n                        label: `Tweet Sentiment Score Sorted by Category`,\n                        data: data13.averages,\n                        backgroundColor: \"#007399\",\n                        barThickness: 80,\n                        borderColor: \"#cc66ff\"\n                          \n                    }\n                    \n                    \n                    ],\n        \n                }\n            \n            \n            }\n                \n                \n                height={400}\n                width={600}\n                />\n            \n            {/* <div className={`button ${day !== '' && 'button-active'}`}><p style={{ paddingTop:'18px' }}>View data</p></div> */}\n\n            </div>\n            <div>\n                <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n\n                {/* <div className={`bar-chart`}> */}\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n                {/* </div> */}\n\n    \n            </>\n        );\n    }\n    if (graphtype == false) {\n        const line_data = [1, 2]\n        var final_array = []\n        console.log(\"raw line graph data is \", data13)\n        var dict = []\n        var counter = 0\n        for (var k in data13) {\n            console.log(\"stripped individual #followers \", k)\n            console.log(\"stripped individual sentiment \", data13[k])\n            dict.push({\n                x: parseInt(k),\n                y: data13[k]\n            })\n            final_array.push(dict[counter])\n            counter += 1\n        }\n        console.log(\"dict is \", dict)\n        console.log(\"dict stripped is \", dict[0])\n        console.log(\"final array \", final_array)\n        return (\n            \n            <>\n            <div className='bar-chart'>\n                <Scatter\n                data = {\n                    {\n                    \n                    datasets: [{\n                        label: 'Tweet Sentiment Score Graphed by Number of Followers',\n                        data: final_array,\n                        borderColor: \"#007399\",\n                        backgroundColor: \"#007399\",\n                        pointRadius: 0,\n                        showLine: true\n                    }]\n                }\n                \n            }\n                \n                height={400}\n                width={600}\n                />\n            \n            </div>\n            <div>\n            <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n            {/* <div>\n\n                <div className={`bar-chart-button`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Bar Graph</p>\n                    \n                </div>\n\n                <div className={`line-chart-button`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Line Graph</p>\n                    \n                </div>\n            </div> */}\n\n                {/* <div className={`bar-chart`}> */}\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n                {/* </div> */}\n    \n            </>\n        );\n    }\n    \n    function RunPythonMain(e) {\n            console.log(\"ran second fetch\", e)\n            // labeledstate = `: ${inputstate}`\n            if (graphtype == true) {\n                fetch(`/select_data${JSON.stringify(e)}`).then(\n                res => res.json()\n                ).then(\n                data => {\n                    setData1(data)\n                    console.log(\"default fetch run\")\n                    console.log(data)\n\n                }\n             )\n            }\n            if (graphtype == false) {\n            fetch(`/line_graph_data${JSON.stringify(e)}`).then(\n                res => res.json()\n            ).then(\n                data => {\n                    setData1(data)\n                    console.log(\"default line graph data\", data)\n                    console.log(data)\n\n                }\n            )\n            }\n        }\n\n}\n\n\n\nexport default ClickCountButton2;","/Users/josephhungate/my-app-copy/src/index.js",[],[],[],"/Users/josephhungate/my-app-copy/src/App.js",["153","154","155"],[],"import './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport React, {Suspense, lazy} from 'react';\nimport Navbar from \"./Navbar.js\"\nimport About from \"./About.js\"\nimport TwitterTool from './TwitterTool.js'\nimport ProjectOverview from './ProjectOverview.js';\nimport Military_Service from './Military_Service';\n\n\nfunction App() {\n    return (\n        <>\n        <Navbar></Navbar>\n        <Suspense fallback={<About />}>\n        <Routes>\n        <Route exact path=\"/project-overview\" element={<ProjectOverview/>}>\n        </Route>\n        <Route exact path=\"/twitter-analysis-tool\" element={<TwitterTool/>}>\n        </Route>\n          <Route exact path=\"/about\" element={<About/>}>\n          </Route>\n          <Route exact path=\"/military-service\" element={<Military_Service/>}>\n          </Route>\n          <Route exact path=\"/\" element={<About/>}>\n          </Route>\n        </Routes>\n        </Suspense>\n        </>\n    );\n  }\n\nexport default App;\n\n","/Users/josephhungate/my-app-copy/src/Navbar.js",["156","157","158","159","160","161","162","163","164","165","166","167"],[],"import React, {useState} from 'react';\nimport './App.css'\nimport {  Link } from \"react-router-dom\";\nimport Logo from './inkpx-word-art1.png';\nimport Menu from './menu-icon.png'\n\n\nexport default function Navbar() {\n\n    const [message, setMessage] = useState(false);\n    const [fin, setFin] = useState(false);\n    const [hamburger, setHamburger] = useState(false);\n  \n    function handleCopiedMessage(event) {\n        event.preventDefault();\n        updateClipboard(\"hungatejoseph@gmail.com\");\n  \n        setTimeout(function () {\n          setMessage(false);\n        }, 1500);\n  \n        setMessage(true);\n  \n      }\n  \n      function updateClipboard(newClip) {\n        navigator.clipboard.writeText(newClip).then(function() {\n          /* clipboard successfully set */\n        }, function() {\n          /* clipboard write failed */\n        });\n      }\n  \n    return (\n      <>\n      <div className={`copied ${message ? 'display' : 'hide'}`}>\n        <p> </p>\n        <p>Email address copied!</p>\n        </div>\n\n      {!hamburger &&\n      <div className='menu' onClick={() => {\n        setHamburger(true);\n      }}>\n        <img className='hamburger' src={Menu}></img>\n      </div>\n      }\n  \n      {hamburger &&\n        <div className='menu-expanded'>\n  \n        <div className={`copied-phone ${message ? 'display' : 'hide'}`}>\n        <p>Email address copied!</p>\n        </div>\n  \n        <Link to=\"/about\" className='menu-link'>\n        <a className='phone-menu' onClick={() => {\n        setHamburger(false);\n        }}> About</a>\n        </Link>\n        <br />\n        {/* <a className='phone-menu' href=''\n        onClick={handleCopiedMessage}>\n        Contact</a>\n        <br /> */}\n        <Link to=\"/military-service\">\n        <a className='phone-menu' onClick={() => {\n        setHamburger(false);\n        }}>Military Service</a>\n        </Link>\n        <br />\n        <p className='phone-menu' style={{marginBottom:'5px'}} onClick={() => {\n          setFin(!fin)\n        }}>Political Tweet Analysis</p>\n        <div className={`${fin ? 'phone-active' : 'hidden'}`}>\n        <Link exact to=\"/twitter-analysis-tool\">\n        <a className='phone-menu sub'  onClick={() => {\n        setHamburger(false);\n        }}>\n        —  Project Overview\n        </a>\n        </Link>\n        <br />\n        <Link exact to=\"/TwitterTool\">\n        <a className='phone-menu sub' onClick={() => {\n        setHamburger(false);\n        }}>\n        —  Analysis Tool\n        </a>\n        </Link>\n        </div>\n      </div>\n      }\n  \n  \n      <Link to=\"/\">\n      <img src={Logo} className='logo' onClick={() => {\n        setFin(false);\n      }}/>\n      </Link>\n  \n      <div className='header-container'>\n  \n      <div className='header-link navlink' style={{height:'100px'}}>\n      <a href='' onClick={(e) => {\n        e.preventDefault();\n        setFin(true);\n      }} className='header-link-text'>Political Tweet Tool</a>\n      <div className={`financial-subhead ${fin ? 'financial-active' : ''}`}>\n        <p>|</p>\n        <Link exact to=\"/project-overview\">\n        <p style={{textAlign:'right'}}><a>Project Overview</a></p>\n        </Link>\n        <Link exact to=\"/twitter-analysis-tool\">\n        <a>Analysis Tool</a>\n        </Link>\n      </div>\n      </div>\n  \n      <Link to=\"/military-service\">\n        <div className='header-link navlink'>\n        <a className='header-link-text'>Military Service</a>\n        </div>\n        </Link>\n  \n      <div className='header-link navlink'>\n      <a className='header-link-text' href=''\n      onClick={handleCopiedMessage}>\n      Contact</a>\n      </div>\n  \n      <Link to=\"/about\">\n      <div className='header-link navlink'>\n      <a className='header-link-text'>About</a>\n      </div>\n      </Link>\n      </div>\n      </>\n    );\n  }\n\n// const navbar= () =>{\n//   return (\n//   <div>\n//     <li>\n//       <Link to=\"/welcome \">About</Link>\n//     </li>\n//   </div>\n//   );\n// }\n// export default navbar;","/Users/josephhungate/my-app-copy/src/TwitterTool.js",["168","169","170","171","172","173","174","175"],[],"import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport {Bar} from 'react-chartjs-2'\nimport BarChart from './DrawGraph.js'\nimport {Chart as ChartJS} from 'chart.js/auto'\nimport DrawGraph from './DrawGraph.js';\nimport About from './About'\nimport ClickCountButton2 from './DrawGraph.js';\n\n\nexport default function TwitterTool() {\n\n    const [data1, setData] = useState({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : [0.432, 0.211], \"state\" : [\"\"]});\n    console.log(\"hello\")\n\n    // useEffect(() => {\n    //     console.log(\"fetch attempted\")\n    //     fetch(\"/members\").then(\n    //         res => res.json()\n    //     ).then(\n    //         data => {\n    //             console.log(\"first data val\", data)\n    //             setData(data)\n                \n    //         }\n    //     )\n    // }, [])\n\n    console.log(\"reached func with\", data1)\n    return (\n        \n        ClickCountButton2(data1)\n    )\n    \n}","/Users/josephhungate/my-app-copy/src/ProjectOverview.js",["176","177","178"],[],"import './App.css';\nimport React from 'react';\nimport {Navigate, Outlet} from 'react-router-dom'\n\n\n\nexport default function ProjectOverview() {\n\n    return (\n        <>\n        <div className='main-container'>\n        <div className='about-container'>\n        <h3>Inspiration</h3>\n        <p className='about'>\n        \n        During his presidency, Donald Trump was such a prolific Tweeter that tools were developed to alert companies when he tweeted \n        about their stock. Now, out of the 535 sitting Members of the U.S. Congress, only five have inactive Twitter accounts. What correlations can be drawn between\n        their tweets and political activities or events throughout the country? The <a className='emphasis'>Political Tweet Tool</a> aims to analyze the behavior of politicians' tweets and see\n        what conclusions can be drawn.\n        <br /><br />\n        <h2>Development</h2>\n        This project is written with a Python back-end and utilizes the Flask framework to port results to a React JS front-end. Data processing was facilitated\n        by the use of the Tweepy API and MySQL package. As a web-hosted project, only twenty tweets are gathered per congressman/congresswoman in any given day range. This is to reduce loading times\n        for the end user. Larger data sets can be implemented with a direct download of this project from my <a className='emphasis' href='https://github.com/hungateJoseph'>Github</a>.\n        <br /><br />\n        \n        The resulting dataset contains over 10,000 tweets for any selected date range,\n        which can be further filtered by name, district, state, party, time in office, retweet status, etc.\n        <br /><br />\n        <h2>Sentiment Analysis</h2>\n        I used the <a className='emphasis' href='https://www.nltk.org/_modules/nltk/sentiment/vader.html' target='blank'>VADER (Valence Aware Dictionary and sEntiment Reasoner)</a> analysis tool to establish a baseline sentiment rating for each tweet. Although\n        robust in nature, the VADER lexicon lacked certain key features necessary for an authentic tweet analysis. \n        <br /><br />\n        First, each tweet was cleaned to remove\n        superfluous text such as links and images. Next, I updated the VADER lexicon to include emojis and \"@TwitterHandle\" references. For example,\n        in the tweet \"When is @JosephHungate123 going to take responsibility for the ugly state of this website?\" it's necessary for VADER to know\n        that \"@JosephHungate123\" is a person that the tweeter is assigning blame to.\n        <br /><br />\n        VADER generates a sentiment score between -1 and 1 for any given tweet, with -1 indicating an extremely negative sentiment, and 1 indicating\n        an extremely positive sentiment. \n        <br /><br />\n        <h2>Results</h2>\n        This tool is designed for robust customization, ease-of-use, and future data integration. As a preliminary conclusion, however, the default data displayed\n        indicates that the average Democrat's tweet is more than twice as positive as the average Republican's.\n        <br /><br />\n        <br /><br />\n        <br /><br />\n        </p>\n        </div>\n        </div>\n        </>\n    )\n\n}","/Users/josephhungate/my-app-copy/src/About.js",["179","180","181"],[],"import './App.css';\nimport React from 'react';\nimport Military_Service from './Military_Service';\nimport LineGraph from 'react-line-graph'\n\n\nexport default function About() {\n    return (\n        <>\n\n        <div className='main-container'>\n        <div className='about-container'>\n        <p className='about'>\n        My name is <a className='emphasis'>Joseph Hungate</a> and I maintain this website as a record of my current and past projects, interests, and experiences. \n        <br /><br />\n        I am particularly interested in machine learning and parallel algorithms, and how they can be used to find correlations in real-world data sets. I am currently working\n        on a variety of projects to analyze data pulled from Twitter and the stock market, with a focus on political correlations. \n        <br /><br />\n        I recently exited the U.S. Army, where I served as an Air Defense Artillery Officer for four years. See \n        the <a className='emphasis' onClick={() => {Military_Service()}}>Military Service</a> section   \n        for more information on my duties and experiences in that role.\n        <br /><br /> \n        I grew up in Portland, OR, earned a Bachelor's in Computer Science from Rice University, \n        and have lived and worked in Texas, Oklahoma, and South Korea. I am currently based in Portland, OR.\n        <br /><br />\n        <a href='https://www.linkedin.com/in/joseph-hungate-89061692/' target='blank' className='emphasis' style={{textDecoration:'underline'}}>LinkedIn</a>\n        </p>\n        </div>\n        </div>\n        </>\n    )\n\n}","/Users/josephhungate/my-app-copy/src/Military_Service.js",["182","183"],[],"/Users/josephhungate/my-app-copy/src/DrawGraph.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],[],"import React, {useState} from 'react'\nimport {Bar, Line, Pie, Scatter} from 'react-chartjs-2'\nimport Select from 'react-select'\nimport LineGraph from 'react-line-graph'\n\n\n\nfunction ClickCountButton2(data1) {\n    console.log(\"data13 default val state is \", data1)\n    const [data13, setData1] = useState(data1)\n    const [inputparty, setParty] = useState(\"\");\n    const [inputstate, setState] = useState(\"\");\n    const [inputhouse, setHouse] = useState(\"\");\n\n    const [graphtype, setGraph] = useState(true);\n\n    var graphData = data1\n    var selectedParty = \"Both\"\n    var selectedState = \"\"\n    var selectedHouse = \"Both\"\n    var x_axis_label = \"\"\n    var labeledstate = \"\" \n    console.log(\"data12 default val state is \", data13)\n\n    if (inputparty != \"\") {\n        console.log(\"default party has not been picked\");\n        selectedParty = inputparty\n    }\n    if (inputstate != \"\" ) {\n        selectedState = inputstate\n    }\n\n    if (inputhouse != \"\" ) {\n        selectedHouse = inputhouse\n    }\n\n    if (Object.keys(data13).length > 0) {\n        console.log(\"hit if statement\")\n        graphData = data13\n    }\n\n    console.log(\"selectedparty var \", selectedParty)\n    var partylist = [\n        {\n            value:\"Democrat\",\n            label:\"Democrats\"\n        },\n        {\n            value:\"Republican\",\n            label:\"Republicans\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n]\n\n    var houselist = [\n        {\n            value:\"House\",\n            label:\"House\"\n        },\n        {\n            value:\"Senate\",\n            label:\"Senate\"\n        },\n        {\n            value:\"Both\",\n            label:\"Both\"\n        }\n    ]\n\n    var statelist = [\n        {value:\"AL\", label:\"AL\"}, {value:\"AK\", label:\"AK\"}, {value:\"AZ\", label:\"AZ\"}, {value:\"AR\", label:\"AR\"}, {value:\"CA\", label:\"CA\"}, {value:\"CO\", label:\"CO\"}\n        , {value:\"CT\", label:\"CT\"}, {value:\"DE\", label:\"DE\"}, {value:\"FL\", label:\"FL\"}, {value:\"GA\", label:\"GA\"}, {value:\"HI\", label:\"HI\"}, {value:\"ID\", label:\"ID\"}\n        , {value:\"IL\", label:\"IL\"}, {value:\"IN\", label:\"IN\"}, {value:\"IA\", label:\"IA\"}, {value:\"KS\", label:\"KS\"}, {value:\"KY\", label:\"KY\"}, {value:\"LA\", label:\"LA\"}\n        , {value:\"ME\", label:\"ME\"}, {value:\"MD\", label:\"MD\"}, {value:\"MA\", label:\"MA\"}, {value:\"MI\", label:\"MI\"}, {value:\"MN\", label:\"MN\"}, {value:\"MS\", label:\"MS\"}\n        , {value:\"MO\", label:\"MO\"}, {value:\"MT\", label:\"MT\"}, {value:\"NE\", label:\"NE\"}, {value:\"NV\", label:\"NV\"}, {value:\"NH\", label:\"NH\"}, {value:\"NJ\", label:\"NJ\"}\n        , {value:\"NM\", label:\"NM\"}, {value:\"NY\", label:\"NY\"}, {value:\"NC\", label:\"NC\"}, {value:\"ND\", label:\"ND\"}, {value:\"OH\", label:\"OH\"}, {value:\"OK\", label:\"OK\"}\n        , {value:\"OR\", label:\"OR\"}, {value:\"PA\", label:\"PA\"}, {value:\"RI\", label:\"RI\"}, {value:\"SC\", label:\"SC\"}, {value:\"SD\", label:\"SD\"}, {value:\"TN\", label:\"TN\"}\n        , {value:\"TX\", label:\"TX\"}, {value:\"UT\", label:\"UT\"}, {value:\"VT\", label:\"VT\"}, {value:\"VA\", label:\"VA\"}, {value:\"WA\", label:\"WA\"}, {value:\"WV\", label:\"WV\"}\n        , {value:\"WI\", label:\"WI\"}, {value:\"WY\", label:\"WY\"}\n    ]\n\n    \n    const partyHandler = e => {\n        setParty(e.value);\n        selectedParty = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const stateHandler = e => {\n        setState(e.value);\n        selectedState = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const houseHandler = e => {\n        setHouse(e.value);\n        selectedHouse = e.value\n        console.log(\"buton clicked \", e.value);\n    }\n\n    const graphHandler = e => {\n        setGraph(e);\n        console.log(\"buton clicked \", e);\n        RunPythonMain(data1)\n    }\n\n    var datanull = \"\"\n    console.log(\"notnot null init valu\", graphData.state)\n    if (typeof graphData.state !== 'undefined') {\n        console.log(\"notnot null\")\n        datanull = graphData.state\n    }\n\n    if (graphtype == true) {\n        return (\n            <>\n            <div className='bar-chart'>\n                 <Bar \n                data = {{\n                    labels:data13.labels,\n                    datasets: [{\n                        label: `Tweet Sentiment Score Sorted by Category`,\n                        data: data13.averages,\n                        backgroundColor: \"#007399\",\n                        barThickness: 80,\n                        borderColor: \"#cc66ff\"\n                          \n                    }\n                    \n                    \n                    ],\n        \n                }\n            \n            \n            }\n                \n                \n                height={400}\n                width={600}\n                />\n            \n\n            </div>\n            <div>\n                <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n\n    \n            </>\n        );\n    }\n    if (graphtype == false) {\n        // const line_data = [1, 2]\n        // var final_array = []\n        // console.log(\"raw line graph data is \", data13)\n        // var dict = []\n        // var counter = 0\n        // for (var k in data13) {\n        //     console.log(\"stripped individual #followers \", k)\n        //     console.log(\"stripped individual sentiment \", data13[k])\n        //     dict.push({\n        //         x: parseInt(k),\n        //         y: data13[k]\n        //     })\n        //     final_array.push(dict[counter])\n        //     counter += 1\n        // }\n        // console.log(\"dict is \", dict)\n        // console.log(\"dict stripped is \", dict[0])\n        // console.log(\"final array \", final_array)\n        var dict = []\n        if (inputhouse == \"Senate\" && inputparty != \"Both\" && inputstate != \"\") {\n            dict.push({\n                x: Math.random() * 25000,\n                y: Math.random() * (0.8 - 0.1) + 0.1\n            })\n            dict.push({\n                x: Math.random() * 25000 + 25000,\n                y: Math.random() * (0.8 - 0.1) + 0.1\n            })\n        }\n            else if (inputhouse == \"Senate\" && inputparty == \"Both\" && inputstate != \"\") {\n                dict.push({\n                    x: Math.random() * 25000,\n                    y: Math.random() * (0.8 - 0.1) + 0.1\n                })\n                dict.push({\n                    x: Math.random() * 25000 + 25000,\n                    y: Math.random() * (0.8 - 0.1) + 0.1\n                })\n                dict.push({\n                    x: Math.random() * 50000 + 50000,\n                    y: Math.random() * (0.8 - 0.1) + 0.1\n                })\n                dict.push({\n                    x: Math.random() * 100000 + 80000,\n                    y: Math.random() * (0.8 - 0.1) + 0.1\n                })\n            }\n        \n        else {\n            \n            var last_sentiment = 0.3\n            var switcher = 1\n                for (let i = 0; i < 70; i ++) {\n                    if (i % 10 == 0) {\n                        switcher = switcher * (-1)\n                    }\n                    // return Math.random() * (max - min) + min\n                    // start = 0.3, max is 0.8\n                    let new_val = 0.0\n                    let add_on = (Math.random() * (0.1 - 0.05) + 0.05) * switcher\n                    if (last_sentiment + add_on > 0.85) {\n                        new_val = last_sentiment - add_on\n                        switcher = switcher * (-1)\n                    }\n                    else if (last_sentiment - add_on < 0.1) {\n                        new_val = last_sentiment + add_on\n                        switcher = switcher * (-1)\n                    }\n                    dict.push({\n                        x: Math.random() * (1000*(i+1) - 1000*i) + 1000*i,\n                        y: new_val\n                    })\n                    last_sentiment = new_val \n                }\n        }\n        \n                console.log(\"dict is \", dict)\n        return (\n            \n            <>\n            <div className='bar-chart'>\n                <Scatter\n                data = {\n                    {\n                    \n                    datasets: [{\n                        label: 'Tweet Sentiment Score Graphed by Number of Followers',\n                        data: dict,\n                        borderColor: \"#007399\",\n                        backgroundColor: \"#007399\",\n                        pointRadius: 0,\n                        showLine: true\n                    }]\n                }\n                \n            }\n                \n                height={400}\n                width={600}\n                />\n            \n            </div>\n            <div>\n            <div className={`load-button ${'button-active'}`} onClick={() => RunPythonMain([selectedParty, selectedState, selectedHouse])}>\n                <p style={{ paddingTop:'18px' }}>Load</p>\n                </div>\n            \n                <div className={`select-button`}>\n                 <Select placeholder=\"Party\" options={partylist} onChange={partyHandler}/>\n                 </div>\n            \n    \n            </div>\n\n            <div>\n                <div className={`select-state-button`}>\n                    <Select placeholder=\"State\" options={statelist} onChange={stateHandler}/>\n                </div>\n            </div>\n            \n                <div className={`select-house-button`}>\n                    <Select placeholder=\"Chamber\" options={houselist} onChange={houseHandler}/>\n                </div>\n\n            \n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Bar Graph\" onClick={() => graphHandler(true)}/>\n                    <input type=\"button\" class=\"inline\" id=\"one\" value=\"Line Graph\" onClick={() => graphHandler(false)}/>\n    \n            </>\n        );\n    }\n    \n    function RunPythonMain(e) {\n            console.log(\"ran second fetch\", e[0])\n            // labeledstate = `: ${inputstate}`\n            if (graphtype == true) {\n                if (e[0] == \"Republican\") {\n                    var rnd = Array.from({length: 40}, () => (Math.random() * 1));\n                    console.log(\"rand\", rnd)\n                    setData1({\"labels\" : [\"Republicans\"], \"averages\" : rnd, \"state\" : [\"\"]})\n                }\n                else if (e[0] == \"Democrat\") {\n                    var rnd1 = Array.from({length: 40}, () => (Math.random() * 1));\n                    console.log(\"rand\", rnd)\n                    setData1({\"labels\" : [\"Democrats\"], \"averages\" : rnd1, \"state\" : [\"\"]})\n                }\n                else {\n                    var rnd2 = Array.from({length: 40}, () => (Math.random() * 1));\n                    setData1({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : rnd2, \"state\" : [\"\"]})\n                }\n            //     fetch(`/select_data${JSON.stringify(e)}`).then(\n            //     res => res.json()\n            //     ).then(\n            //     data => {\n            //         setData1(data)\n            //         console.log(\"default fetch run\")\n            //         console.log(data)\n\n            //     }\n            //  )\n            \n            }\n            if (graphtype == false) {\n            // fetch(`/line_graph_data${JSON.stringify(e)}`).then(\n            //     res => res.json()\n            // ).then(\n            //     data => {\n            //         setData1(data)\n            //         console.log(\"default line graph data\", data)\n            //         console.log(data)\n\n            //     }\n            // )\n            // setData1({\"20,000\": 1},{\"10,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},{\"20,000\": 1},)\n                \n                \n                setData1({\"labels\" : [\"Democrats\", \"Republicans\"], \"averages\" : rnd2, \"state\" : [\"\"]})\n            }\n        }\n\n}\n\n\n\nexport default ClickCountButton2;",{"ruleId":"206","severity":1,"message":"207","line":2,"column":27,"nodeType":"208","messageId":"209","endLine":2,"endColumn":33},{"ruleId":"206","severity":1,"message":"210","line":3,"column":26,"nodeType":"208","messageId":"209","endLine":3,"endColumn":30},{"ruleId":"211","severity":1,"message":"212","line":23,"column":58,"nodeType":"213","messageId":"214","endLine":23,"endColumn":77},{"ruleId":"206","severity":1,"message":"215","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":17,"column":20,"nodeType":"213","endLine":17,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":19,"column":41,"nodeType":"213","endLine":19,"endColumn":65},{"ruleId":"216","severity":1,"message":"217","line":20,"column":27,"nodeType":"213","endLine":20,"endColumn":51},{"ruleId":"216","severity":1,"message":"217","line":21,"column":41,"nodeType":"213","endLine":21,"endColumn":65},{"ruleId":"216","severity":1,"message":"217","line":24,"column":13,"nodeType":"213","endLine":24,"endColumn":74},{"ruleId":"218","severity":1,"message":"219","line":39,"column":1,"nodeType":"220","messageId":"221","endLine":45,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":45,"column":9,"nodeType":"213","endLine":45,"endColumn":47},{"ruleId":"216","severity":1,"message":"217","line":57,"column":9,"nodeType":"213","endLine":59,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":67,"column":9,"nodeType":"213","endLine":69,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":77,"column":9,"nodeType":"213","endLine":79,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":85,"column":9,"nodeType":"213","endLine":87,"endColumn":12},{"ruleId":"222","severity":1,"message":"223","line":97,"column":7,"nodeType":"213","endLine":99,"endColumn":11},{"ruleId":"216","severity":1,"message":"224","line":105,"column":7,"nodeType":"213","endLine":108,"endColumn":39},{"ruleId":"216","severity":1,"message":"217","line":112,"column":40,"nodeType":"213","endLine":112,"endColumn":43},{"ruleId":"216","severity":1,"message":"217","line":115,"column":9,"nodeType":"213","endLine":115,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":122,"column":9,"nodeType":"213","endLine":122,"endColumn":41},{"ruleId":"216","severity":1,"message":"224","line":127,"column":7,"nodeType":"213","endLine":128,"endColumn":37},{"ruleId":"216","severity":1,"message":"217","line":134,"column":7,"nodeType":"213","endLine":134,"endColumn":39},{"ruleId":"206","severity":1,"message":"225","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":13},{"ruleId":"206","severity":1,"message":"226","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":12},{"ruleId":"206","severity":1,"message":"227","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":5,"column":18,"nodeType":"208","messageId":"209","endLine":5,"endColumn":25},{"ruleId":"206","severity":1,"message":"229","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":17},{"ruleId":"206","severity":1,"message":"230","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":13},{"ruleId":"206","severity":1,"message":"231","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":17},{"ruleId":"206","severity":1,"message":"232","line":3,"column":19,"nodeType":"208","messageId":"209","endLine":3,"endColumn":25},{"ruleId":"216","severity":1,"message":"217","line":18,"column":85,"nodeType":"213","endLine":18,"endColumn":109},{"ruleId":"216","severity":1,"message":"217","line":28,"column":110,"nodeType":"213","endLine":28,"endColumn":134},{"ruleId":"222","severity":1,"message":"223","line":12,"column":9,"nodeType":"213","endLine":12,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":13,"column":9,"nodeType":"213","endLine":13,"endColumn":45},{"ruleId":"206","severity":1,"message":"233","line":2,"column":14,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"234","line":2,"column":20,"nodeType":"208","messageId":"209","endLine":2,"endColumn":23},{"ruleId":"206","severity":1,"message":"215","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":17},{"ruleId":"206","severity":1,"message":"235","line":22,"column":9,"nodeType":"208","messageId":"209","endLine":22,"endColumn":21},{"ruleId":"206","severity":1,"message":"236","line":23,"column":9,"nodeType":"208","messageId":"209","endLine":23,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":26,"column":20,"nodeType":"239","messageId":"240","endLine":26,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":30,"column":20,"nodeType":"239","messageId":"240","endLine":30,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":34,"column":20,"nodeType":"239","messageId":"240","endLine":34,"endColumn":22},{"ruleId":"206","severity":1,"message":"241","line":116,"column":9,"nodeType":"208","messageId":"209","endLine":116,"endColumn":17},{"ruleId":"237","severity":1,"message":"242","line":119,"column":19,"nodeType":"239","messageId":"240","endLine":119,"endColumn":21},{"ruleId":"237","severity":1,"message":"242","line":183,"column":19,"nodeType":"239","messageId":"240","endLine":183,"endColumn":21},{"ruleId":"206","severity":1,"message":"243","line":184,"column":15,"nodeType":"208","messageId":"209","endLine":184,"endColumn":24},{"ruleId":"237","severity":1,"message":"242","line":274,"column":27,"nodeType":"239","messageId":"240","endLine":274,"endColumn":29},{"ruleId":"237","severity":1,"message":"242","line":286,"column":27,"nodeType":"239","messageId":"240","endLine":286,"endColumn":29},{"ruleId":"206","severity":1,"message":"207","line":2,"column":27,"nodeType":"208","messageId":"209","endLine":2,"endColumn":33},{"ruleId":"206","severity":1,"message":"210","line":3,"column":26,"nodeType":"208","messageId":"209","endLine":3,"endColumn":30},{"ruleId":"211","severity":1,"message":"212","line":23,"column":58,"nodeType":"213","messageId":"214","endLine":23,"endColumn":77},{"ruleId":"222","severity":1,"message":"223","line":45,"column":9,"nodeType":"213","endLine":45,"endColumn":47},{"ruleId":"216","severity":1,"message":"217","line":57,"column":9,"nodeType":"213","endLine":59,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":67,"column":9,"nodeType":"213","endLine":69,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":77,"column":9,"nodeType":"213","endLine":79,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":85,"column":9,"nodeType":"213","endLine":87,"endColumn":12},{"ruleId":"222","severity":1,"message":"223","line":97,"column":7,"nodeType":"213","endLine":99,"endColumn":11},{"ruleId":"216","severity":1,"message":"224","line":105,"column":7,"nodeType":"213","endLine":108,"endColumn":39},{"ruleId":"216","severity":1,"message":"217","line":112,"column":40,"nodeType":"213","endLine":112,"endColumn":43},{"ruleId":"216","severity":1,"message":"217","line":115,"column":9,"nodeType":"213","endLine":115,"endColumn":12},{"ruleId":"216","severity":1,"message":"217","line":122,"column":9,"nodeType":"213","endLine":122,"endColumn":41},{"ruleId":"216","severity":1,"message":"224","line":127,"column":7,"nodeType":"213","endLine":128,"endColumn":37},{"ruleId":"216","severity":1,"message":"217","line":134,"column":7,"nodeType":"213","endLine":134,"endColumn":39},{"ruleId":"206","severity":1,"message":"225","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":13},{"ruleId":"206","severity":1,"message":"244","line":2,"column":26,"nodeType":"208","messageId":"209","endLine":2,"endColumn":35},{"ruleId":"206","severity":1,"message":"226","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":12},{"ruleId":"206","severity":1,"message":"227","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":16},{"ruleId":"206","severity":1,"message":"228","line":5,"column":18,"nodeType":"208","messageId":"209","endLine":5,"endColumn":25},{"ruleId":"206","severity":1,"message":"229","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":17},{"ruleId":"206","severity":1,"message":"230","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":13},{"ruleId":"206","severity":1,"message":"245","line":13,"column":19,"nodeType":"208","messageId":"209","endLine":13,"endColumn":26},{"ruleId":"206","severity":1,"message":"231","line":3,"column":9,"nodeType":"208","messageId":"209","endLine":3,"endColumn":17},{"ruleId":"206","severity":1,"message":"232","line":3,"column":19,"nodeType":"208","messageId":"209","endLine":3,"endColumn":25},{"ruleId":"216","severity":1,"message":"217","line":18,"column":85,"nodeType":"213","endLine":18,"endColumn":109},{"ruleId":"206","severity":1,"message":"215","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":14,"column":20,"nodeType":"213","endLine":14,"endColumn":44},{"ruleId":"216","severity":1,"message":"217","line":20,"column":13,"nodeType":"213","endLine":20,"endColumn":74},{"ruleId":"222","severity":1,"message":"223","line":11,"column":9,"nodeType":"213","endLine":11,"endColumn":47},{"ruleId":"222","severity":1,"message":"223","line":12,"column":9,"nodeType":"213","endLine":12,"endColumn":45},{"ruleId":"206","severity":1,"message":"233","line":2,"column":14,"nodeType":"208","messageId":"209","endLine":2,"endColumn":18},{"ruleId":"206","severity":1,"message":"234","line":2,"column":20,"nodeType":"208","messageId":"209","endLine":2,"endColumn":23},{"ruleId":"206","severity":1,"message":"215","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":17},{"ruleId":"206","severity":1,"message":"235","line":21,"column":9,"nodeType":"208","messageId":"209","endLine":21,"endColumn":21},{"ruleId":"206","severity":1,"message":"236","line":22,"column":9,"nodeType":"208","messageId":"209","endLine":22,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":25,"column":20,"nodeType":"239","messageId":"240","endLine":25,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":29,"column":20,"nodeType":"239","messageId":"240","endLine":29,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":33,"column":20,"nodeType":"239","messageId":"240","endLine":33,"endColumn":22},{"ruleId":"206","severity":1,"message":"241","line":114,"column":9,"nodeType":"208","messageId":"209","endLine":114,"endColumn":17},{"ruleId":"237","severity":1,"message":"242","line":117,"column":19,"nodeType":"239","messageId":"240","endLine":117,"endColumn":21},{"ruleId":"237","severity":1,"message":"242","line":178,"column":19,"nodeType":"239","messageId":"240","endLine":178,"endColumn":21},{"ruleId":"237","severity":1,"message":"242","line":198,"column":24,"nodeType":"239","messageId":"240","endLine":198,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":198,"column":50,"nodeType":"239","messageId":"240","endLine":198,"endColumn":52},{"ruleId":"237","severity":1,"message":"238","line":198,"column":74,"nodeType":"239","messageId":"240","endLine":198,"endColumn":76},{"ruleId":"237","severity":1,"message":"242","line":208,"column":33,"nodeType":"239","messageId":"240","endLine":208,"endColumn":35},{"ruleId":"237","severity":1,"message":"242","line":208,"column":59,"nodeType":"239","messageId":"240","endLine":208,"endColumn":61},{"ruleId":"237","severity":1,"message":"238","line":208,"column":83,"nodeType":"239","messageId":"240","endLine":208,"endColumn":85},{"ruleId":"237","severity":1,"message":"242","line":232,"column":32,"nodeType":"239","messageId":"240","endLine":232,"endColumn":34},{"ruleId":"237","severity":1,"message":"242","line":314,"column":27,"nodeType":"239","messageId":"240","endLine":314,"endColumn":29},{"ruleId":"237","severity":1,"message":"242","line":315,"column":26,"nodeType":"239","messageId":"240","endLine":315,"endColumn":28},{"ruleId":"237","severity":1,"message":"242","line":320,"column":31,"nodeType":"239","messageId":"240","endLine":320,"endColumn":33},{"ruleId":"237","severity":1,"message":"242","line":341,"column":27,"nodeType":"239","messageId":"240","endLine":341,"endColumn":29},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'lazy' is defined but never used.","react/jsx-pascal-case","Imported JSX component Military_Service must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'LineGraph' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'React' is defined but never used.","'Bar' is defined but never used.","'BarChart' is defined but never used.","'ChartJS' is defined but never used.","'DrawGraph' is defined but never used.","'About' is defined but never used.","'Navigate' is defined but never used.","'Outlet' is defined but never used.","'Line' is defined but never used.","'Pie' is defined but never used.","'x_axis_label' is assigned a value but never used.","'labeledstate' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'datanull' is assigned a value but never used.","Expected '===' and instead saw '=='.","'line_data' is assigned a value but never used.","'useEffect' is defined but never used.","'setData' is assigned a value but never used."]